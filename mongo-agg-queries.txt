Find cards with a lot of discounted payments (suggesting fraud)

db.bankTransactions.aggregate([
  {$match: {"details.reason": "card-open-fee", "details.amount": 0.000001}},
  {$group: {_id: "$cardId, total: {$sum: 1}}},
  {$sort: {total: -1}}
])

{ "_id" : "a0f129e1-e059-43b6-8b55-93ae117ea8c2", "total" : 81 }
{ "_id" : "b9323a04-7dac-4243-8546-54a6a7abfc8b", "total" : 75 }
{ "_id" : "892750f8-a8dc-4101-9d0d-85101f7abfd4", "total" : 56 }
{ "_id" : "76fb8c25-d4c2-4ac9-9839-8c926945b4d5", "total" : 47 }
{ "_id" : "43a1bfa6-f559-448b-b6f8-c04cfae4f900", "total" : 43 }
{ "_id" : "78118df2-f9c5-4026-8e3b-a160ca45561f", "total" : 37 }
{ "_id" : "3dce21d3-c0a1-4451-9393-f42018807cef", "total" : 34 }
{ "_id" : "5bac782f-b43c-4d78-8327-3c6117251c79", "total" : 20 }
{ "_id" : "c3a4d7a3-e8d6-4dcb-ae0c-fc6cd3a785b3", "total" : 20 }
{ "_id" : "353ade7f-cbb9-4d96-bff6-8c0557d3d337", "total" : 20 }
{ "_id" : "87e59668-d574-4054-a37b-101062ede94e", "total" : 20 }
{ "_id" : "ecd09f22-6ffc-4e4f-bbc9-50a68d62747e", "total" : 20 }
{ "_id" : "241a9902-2f07-482b-81c8-27801082ef46", "total" : 20 }
{ "_id" : "4f240e54-cc37-471d-a068-28f737f40244", "total" : 20 }
{ "_id" : "1421fdc1-f67b-4343-8e4e-5ddd2a1386b4", "total" : 19 }
{ "_id" : "1386db84-98c7-4b7c-92a1-785ca78db0fa", "total" : 19 }
{ "_id" : "b4d95770-cae8-481f-bedb-3658d5e56305", "total" : 17 }
{ "_id" : "09b1e46a-443c-41a6-9b25-3565c772e4df", "total" : 16 }
{ "_id" : "42a78ffb-01c9-42d1-b23e-bdb6270b5b55", "total" : 16 }
{ "_id" : "e73ec987-d62a-44d5-98f1-cfedbe462049", "total" : 15 }
{ "_id" : "8edadc16-1360-4291-b36b-2edc09bb6d68", "total" : 15 }


Users by number of card purchases

db.userCardActions.aggregate([
  {$match: {action: "pay"}}, 
  {$group: {_id: "$userId", count: {$sum: 1}}}, 
  {$lookup: {from: "users", localField:"_id", foreignField: "id", as: "user"}}, 
  {$unwind: "$user"},
  {$project: {_id: 1, userId: 1, count: 1, "user.identity.handle": 1, "user.balance": 1, "user.city": 1}}, 
  {$sort: {count: -1}}
  ])

{ "_id" : "81b62690-81e0-4561-9eba-1b0c84dcc9ab", "count" : 389, "user" : { "balance" : 38.75763170917111, "identity" : { "handle" : "carl" }, "city" : "Palo Alto" } }
{ "_id" : "bb7fe532-2c5f-4e8f-9ceb-29fcacad53fd", "count" : 304, "user" : { "balance" : 7.107843907900668, "identity" : { "handle" : "kduffie" }, "city" : "Palo Alto" } }
{ "_id" : "07079e4d-5b7b-4490-afa4-ac2e4934abed", "count" : 290, "user" : { "balance" : 41.6189923585694, "identity" : { "handle" : "shihn" }, "city" : "Fremont" } }
{ "_id" : "eea3209f-9bcb-4cd7-ad25-cc165f0c5661", "count" : 110, "user" : { "balance" : 87.77201993733755, "identity" : { "handle" : "patricia" }, "city" : "Montreal" } }
{ "_id" : "0c4a28fd-6a3b-42ca-adfe-4dfc89cc47e5", "count" : 62, "user" : { "balance" : 13.849659678279505, "identity" : { "handle" : "eric" }, "city" : "Pittsburgh" } }
{ "_id" : "42d5089c-1a72-49db-89ee-a0c05f7162a8", "count" : 54, "user" : { "balance" : 434.93431544502215, "identity" : { "handle" : "datastories" }, "city" : "San Jose" } }
{ "_id" : "9f3e9d8f-5913-4e13-b1b2-c48a64fed5b6", "count" : 43, "user" : { "balance" : 2.888722257405604, "city" : "Warren" } }
{ "_id" : "24037b50-f7a4-465f-92fe-42831ef82ad3", "count" : 41, "user" : { "balance" : 11.042353292647556, "identity" : { "handle" : "flashfanatic" }, "city" : "Johnstown" } }
{ "_id" : "bb30b0ad-2fae-42e8-8da0-263d0f19f192", "count" : 40, "user" : { "balance" : 1.6053589132183796, "city" : "Lagos" } }
{ "_id" : "01d0dfa1-eb3c-4131-8b24-b9ca08250161", "count" : 39, "user" : { "balance" : 0.01000460435233928, "city" : "New York" } }
{ "_id" : "6e6b17ba-55f0-4fdc-a3d7-b3184272f879", "count" : 38, "user" : { "balance" : 8.131419167431154, "city" : "Oke Ila", "identity" : { "handle" : "lizabeth12349" } } }
{ "_id" : "8d54cc09-d40e-4f85-85ea-d84283947f59", "count" : 35, "user" : { "balance" : 28.074179135937353, "city" : "Palo Alto", "identity" : { "handle" : "lliizz" } } }
{ "_id" : "4beb6acb-e535-42e7-8f0c-4f3c7fac60fe", "count" : 33, "user" : { "balance" : 3.495300658501894, "city" : "Sterling Heights" } }
{ "_id" : "46b4ba43-e942-42c0-a8ee-9ec7b94489f2", "count" : 33, "user" : { "balance" : 49.25838904916544, "city" : "Lagos", "identity" : { "handle" : "sosomeyes" } } }
{ "_id" : "90da14be-7c8c-41b4-99d3-520d6d42eac2", "count" : 32, "user" : { "balance" : 0.16960598245498384, "city" : "Warren" } }
{ "_id" : "05f05e96-4ba5-4304-b00f-40b64b321b8a", "count" : 32, "user" : { "balance" : 0.8804829782310986, "city" : "New York" } }
{ "_id" : "d9e89963-f1e1-4c76-be8e-eab7ed28dc55", "count" : 31, "user" : { "balance" : 0.5047830043942011, "city" : "Central Lake", "identity" : { "handle" : "lets_do_this" } } }
{ "_id" : "14beeef7-d056-4d1c-aab7-25f594b94a5d", "count" : 31, "user" : { "balance" : 0.14907532895637662, "city" : "New York" } }
{ "_id" : "b52b54d7-a7e3-4620-8a49-be89646b34ce", "count" : 30, "user" : { "balance" : 0.01099589058612099, "city" : "Sterling Heights" } }
{ "_id" : "762592e8-3024-41d2-9d3c-5d11b2aeb10c", "count" : 30, "user" : { "balance" : 11.117637789993124, "city" : "Belvidere", "identity" : { "handle" : "mighterbump" } } }
{ "_id" : "17238ec8-1072-4419-a60d-e7cea3fa63da", "count" : 30, "user" : { "balance" : 0.010002029740504681, "city" : "New York" } }
{ "_id" : "595a2cf8-51fd-42f0-aa81-dc647b2cfe33", "count" : 30, "user" : { "balance" : 0.019012763633084555, "city" : "New York" } }
{ "_id" : "5cd5dc35-5feb-4f43-861f-d17990e8c7e3", "count" : 30, "user" : { "balance" : 0.6281335791302032, "city" : "Warren" } }
{ "_id" : "4e7dc4f0-1333-4205-8458-cb9b99894df5", "count" : 30, "user" : { "balance" : 0.14212290340992045, "city" : "New York" } }
{ "_id" : "52df4483-261d-4af7-b98d-b42fb4ea5d54", "count" : 30, "user" : { "balance" : 0.010006480637714376, "city" : "New York" } }
{ "_id" : "bc773d16-c1a4-4a14-8087-980b87d6a3e5", "count" : 29, "user" : { "balance" : 0.028999999999999, "city" : "Denver" } }
{ "_id" : "1a51f8a6-f0be-424e-8697-3b0a468320fb", "count" : 29, "user" : { "balance" : 0.059016925322132624, "city" : "Toronto" } }
{ "_id" : "a6c3de07-6252-4b11-898d-12544dc6699c", "count" : 29, "user" : { "balance" : 0.020008099535943867, "city" : "South Orange" } }
{ "_id" : "3c16b0b0-d312-4ac7-87dc-dd37fcb8ab7d", "count" : 29, "user" : { "balance" : 0.5006144783826069, "city" : "New York" } }
{ "_id" : "146154ce-ad45-45c4-8fe1-d6535470e8e8", "count" : 29, "user" : { "balance" : 0.03802770548013634, "city" : "New York" } }
{ "_id" : "0d42a92c-4e9a-4171-9628-7760d579d225", "count" : 29, "user" : { "balance" : 0.16516628259943078, "city" : "Warren" } }
{ "_id" : "80865b31-7b67-4539-a861-bce4e6fd715e", "count" : 29, "user" : { "balance" : 0.09006304719965386, "city" : "New York" } }
{ "_id" : "615da9a3-0541-475d-b976-d4dd6b80258d", "count" : 29, "user" : { "balance" : 0.1000729106616404, "city" : "South Orange" } }
{ "_id" : "f21df476-b1cf-4724-89be-25f8605d5358", "count" : 28, "user" : { "balance" : 0.2517156156245563, "city" : "Warren" } }
{ "_id" : "014c7639-8397-45a5-b863-c66f2725aab7", "count" : 28, "user" : { "balance" : 0.05001319856136919, "city" : "New York" } }
{ "_id" : "5da85458-b607-4e33-ac9a-36fd06180271", "count" : 28, "user" : { "balance" : 0.5714331202497263, "city" : "New York" } }
{ "_id" : "d722a6bb-0434-47df-ade5-8ee278680855", "count" : 28, "user" : { "balance" : 0.05005074511858142, "city" : "New York" } }
{ "_id" : "df337d61-b737-4581-aaa7-c81f5a3fb38d", "count" : 28, "user" : { "balance" : 0.000003156212853718705, "city" : "London" } }
{ "_id" : "7f40fe79-e8de-458f-afd4-dab253bcaefd", "count" : 28, "user" : { "balance" : 0.014019421199433783, "city" : "New York" } }
{ "_id" : "1b2899e1-24b3-4e07-9ba5-d0c6dc86cea9", "count" : 28, "user" : { "balance" : 0.06001943819511323, "city" : "New York" } }
{ "_id" : "0277ee60-62ed-4904-a881-e89a3b3e52e2", "count" : 28, "user" : { "balance" : 0.0490438937976204, "city" : "New York" } }
{ "_id" : "3d72601d-0daa-41ed-ab43-ecaaffd7fac4", "count" : 28, "user" : { "balance" : 0.16015852890341198, "city" : "New York" } }
{ "_id" : "8b428be4-a2de-49bc-bc95-bc3c308c160d", "count" : 27, "user" : { "balance" : 0.0110000668975332, "city" : "Sterling Heights" } }
{ "_id" : "3b8eae85-c098-418a-93a2-0c98773800ad", "count" : 27, "user" : { "balance" : 0.10902648561409917, "city" : "New York" } }
{ "_id" : "db530b71-7a16-4122-a808-691a8c78c81f", "count" : 27, "user" : { "balance" : 0.010003319907270616, "city" : "Warren" } }
{ "_id" : "b5a0af2d-9ca9-4d0f-a7a0-955e67796045", "count" : 27, "user" : { "balance" : 0.30321076730323326, "city" : "Ha Tinh", "identity" : { "handle" : "johnnysaigon" } } }
{ "_id" : "8e51a872-313c-4a0d-9dba-3327dc9d923a", "count" : 27, "user" : { "balance" : 0.07903199373603526, "city" : "Toronto" } }
{ "_id" : "87c171fd-aa48-4913-9e76-8a78023a5cd9", "count" : 27, "user" : { "balance" : 0.11905070433002558, "city" : "Toronto" } }
{ "_id" : "a776fc51-e6bd-4c99-82e9-c3ff231bbe7c", "count" : 27, "user" : { "balance" : 61.70412021144898, "identity" : { "handle" : "brad" }, "city" : "Gastonville" } }
{ "_id" : "8bc0389b-a852-450d-b10c-6b290cdf20fe", "count" : 27, "user" : { "balance" : 0.08910721746107841, "city" : "Toronto" } }
{ "_id" : "b07e5d97-b911-4eca-b0dc-d4da6097f1f4", "count" : 27, "user" : { "balance" : 2.778287282515796, "city" : "Central Lake" } }
{ "_id" : "385e9d46-c2cc-4660-9751-1f04c7e464d8", "count" : 27, "user" : { "balance" : 0.13705468545304408, "city" : "Warren" } }
{ "_id" : "73295cd0-b9ab-4e5b-82f4-6d78c600f8de", "count" : 27, "user" : { "balance" : 2.110128346503502, "city" : "Lagos" } }
{ "_id" : "a7af9dd2-bb6c-4ae6-a89c-dd528ec59a94", "count" : 27, "user" : { "balance" : 0.06505266019947978, "city" : "New York" } }
{ "_id" : "61fc56bf-029e-482a-9caa-cb49610bbf23", "count" : 27, "user" : { "balance" : 0.006057536346016397, "city" : "San Jose" } }
{ "_id" : "27ed87ea-4871-4616-ab71-efa3632b4783", "count" : 27, "user" : { "balance" : 0.10006095027156241, "city" : "New York" } }
{ "_id" : "6ff43e5d-9d41-421e-b64c-c9698619560b", "count" : 26, "user" : { "balance" : 0.1000567032453994, "city" : "Clinton Township" } }
{ "_id" : "7e0caf36-fe7d-4841-9c7f-ec9188bdf823", "count" : 26, "user" : { "balance" : 0.08008703498737557, "city" : "Warren" } }
{ "_id" : "63313a3f-56e4-4267-95d0-d149c7f93a49", "count" : 26, "user" : { "balance" : 19.700954559671175, "identity" : { "handle" : "dcrowe2" }, "city" : "Saint-Hubert-de-Riviere-du-Loup" } }
{ "_id" : "697009c8-c209-4872-86a1-423d26a7720d", "count" : 26, "user" : { "balance" : 0.390417540651055, "city" : "San Jose" } }

Find user registrations from the same fingerprint

db.userRegistrations.aggregate([
  {$match: {at: {$gt: 1518459306000}}},
  {$group: {_id: "$fingerprint", count: {$sum: 1}, userIds: {$addToSet: "$userId"}}},
  {$project: {count: "$count", users: {$size: "$userIds"}}},
  {$match: {users: {$gt: 3}}},
  {$sort: {users: -1}},
  {$lookup: {from: "userCardActions", localField: "_id", foreignField: "fromFingerprint", as: "action"}},
  {$unwind: "$action"},
  {$match: {"action.action": "pay", "action.at": {$gt: 1518459306000}}},
  {$group: {_id: {fingerprint: "$_id", cardId: "$action.cardId", authorId: "$action.authorId"}, count: {$sum: 1}, fraudReason: {$push: "$action.fraudReason"}}},
  {$sort: {count: -1}},
  {$lookup: {from: "users", localField:"_id.authorId", foreignField: "id", as: "user"}}, 
  {$unwind: "$user"},
  {$project: {_id: 1, count: 1, fraud: {$size: "$fraudReason"}, "user.identity.handle": 1, "user.balance": 1, "user.city": 1}}, 
])

db.userRegistrations.aggregate([
  {$match: {at: {$lt: 1518459306000, $gt: 1517854506000}}},
  {$group: {_id: "$fingerprint", count: {$sum: 1}, userIds: {$addToSet: "$userId"}}},
  {$project: {count: "$count", users: {$size: "$userIds"}}},
  {$match: {users: {$gt: 3}}},
  {$sort: {users: -1}},
  {$lookup: {from: "userCardActions", localField: "_id", foreignField: "fromFingerprint", as: "action"}},
  {$unwind: "$action"},
  {$match: {"action.action": "pay", "action.at": {$lt: 1518459306000, $gt: 1517854506000}}},
  {$group: {_id: {fingerprint: "$_id", cardId: "$action.cardId", authorId: "$action.authorId"}, count: {$sum: 1}, fraudReason: {$push: "$action.fraudReason"}}},
  {$sort: {count: -1}},
  {$lookup: {from: "users", localField:"_id.authorId", foreignField: "id", as: "user"}}, 
  {$unwind: "$user"},
  {$project: {_id: 1, count: 1, fraud: {$size: "$fraudReason"}, "user.identity.handle": 1, "user.balance": 1, "user.city": 1}}, 
])

db.userCardActions.aggregate([
  {$match: {action: "pay", cardId: "2cce6ccc-4599-4128-b4b2-f69f6bb8bea8"}},
  {$group: {_id: "$userId"} },
  {$lookup: {from: "users", localField:"_id", foreignField: "id", as: "user"}}, 
  {$unwind: "$user"},
  {$project: {_id: 1, "user.identity.handle": 1, "user.balance": 1, "user.city": 1, "user.country": 1}}, 
  {$sort: {"user.balance": -1}}
])

db.userRegistrations.aggregate([
  {$match: {at: {$gt: 1517854506000}}},
  {$group: {_id: "$fingerprint", count: {$sum: 1}, userIds: {$addToSet: "$userId"}}},
  {$project: {count: "$count", users: {$size: "$userIds"}}},
  {$match: {users: {$gt: 5}}},
  {$sort: {users: -1}},
  {$lookup: {from: "userCardActions", localField: "_id", foreignField: "fromFingerprint", as: "action"}},
  {$unwind: "$action"},
  {$match: {"action.action": "pay"}},
])

db.userRegistrations.aggregate([
  {$match: {fingerprint: "eb85de6c8d71ec545b1dff2cf278eaa7"}},
  {$group: {_id: "$userId"}}
])


db.userCardActions.aggregate([
  {$match: {action: "pay", fromFingerprint: "eb85de6c8d71ec545b1dff2cf278eaa7", at: {$gt: 1518459306000}}},
  {$group: {_id: {cardId: "$cardId", authorId: "$authorId"}, count: {$sum: 1}, fraud: {$push: "$fraudReason"}}},
  {$sort: {count: -1}}
])

  {$group: {_id: {fingerprint: "$fromFingerprint", authorId: "$authorId"}, count: {$sum: 1}}},
  {$sort: {count: -1}}  


db.userRegistrations.aggregate([
  {$match: {fingerprint: "d751e8a9e77f313d1782bfd14cfa52e9"}},
  {$group: {_id: "$userId", count: {$sum: 1}}},
  {$lookup: {from: "users", localField:"_id", foreignField: "id", as: "user"}}, 
  {$unwind: "$user"},
  {$project: {_id: 1, userId: 1, count: 1, "user.identity.handle": 1, "user.balance": 1, "user.city": 1}},
  {$sort: {count: -1}}
])

{ "_id" : "a106ea56-903d-4e3e-a3c8-a6db16c779f2", "count" : 18, "user" : { "balance" : 1.250305902148338, "city" : "Amsterdam" } }
{ "_id" : "b8cbe36e-6874-4b76-a401-ec61ff6e11da", "count" : 11, "user" : { "balance" : 0.2500809939793709, "city" : "Clichy-sous-Bois" } }
{ "_id" : "f35ab2ea-7ae1-4eb7-8628-02424e599b7b", "count" : 10, "user" : { "balance" : 0.2500809954887105, "city" : "Paris" } }
{ "_id" : "38c30888-d590-4096-b17a-19752d2304de", "count" : 10, "user" : { "balance" : 1.7505669835160098, "city" : "Bourlens (France)" } }
{ "_id" : "0f8661d2-fe7d-44e2-8c9e-1ac5c993b696", "count" : 10, "user" : { "balance" : 0.5001619880913949, "city" : "Almere Stad" } }
{ "_id" : "0cedf602-3291-490a-9b30-5da040d1d3e8", "count" : 10, "user" : { "balance" : 0.5001619945042132, "city" : "Amsterdam" } }
{ "_id" : "85ce2995-0089-4318-a8cc-5a66360778ee", "count" : 10, "user" : { "balance" : 0.25008099669149475, "city" : "Moscow" } }
{ "_id" : "5ac0f9d3-6f93-4b7b-9423-56366eb1c250", "count" : 9, "user" : { "balance" : 2.000483926714031, "city" : "Hünenberg" } }
{ "_id" : "0722b6c9-40bb-4232-a814-1f5ef9b9983d", "count" : 9, "user" : { "balance" : 1.2503037111039716, "city" : "Erfurt (Altstadt)" } }
{ "_id" : "f291d6a9-b1cd-419c-843d-68f2150c929d", "count" : 9, "user" : { "balance" : 1.0002419884259341, "city" : "Norrtälje" } }
{ "_id" : "373836a4-5a0b-4537-8f5e-5ba55faa7578", "count" : 9, "user" : { "balance" : 2.50060047022214, "city" : "Paris (8th arrondissement of Paris)" } }
{ "_id" : "3d1683a4-7e05-4701-a8e9-3013dba884d2", "count" : 9, "user" : { "balance" : 1.500361449270432, "city" : "Paris (8th arrondissement of Paris)" } }
{ "_id" : "4a557c0d-1429-417b-bdfa-626dc72fcb88", "count" : 9, "user" : { "balance" : 0.25006074187934557, "city" : "Utrecht" } }
{ "_id" : "a63e1908-c481-45ea-a6b1-eeec8f2e1062", "count" : 9, "user" : { "balance" : 2.500600402302862, "city" : "Amsterdam" } }
{ "_id" : "361fe713-db93-4783-ad36-2279c38a57ee", "count" : 9, "user" : { "balance" : 1.0002419658580015, "city" : "Amsterdam" } }
{ "_id" : "43817319-7dc2-4f53-8ac6-84e398b54d13", "count" : 9, "user" : { "balance" : 1.2503037295532162, "city" : "Haarlem (Haarlem-Oost)" } }
{ "_id" : "9220606b-c33c-453a-aa69-f41975c546d5", "count" : 9, "user" : { "balance" : 1.0003239910436912, "city" : "Paris (8th arrondissement of Paris)" } }
{ "_id" : "b1f035b7-927b-4b1c-9b82-6896e023a0ca", "count" : 9, "user" : { "balance" : 2.2505406947508, "city" : "Vitry-sur-Seine" } }
{ "_id" : "6ad71b45-92da-492b-8940-d08c9a1fa002", "count" : 9, "user" : { "balance" : 1.000242965064201, "city" : "Stockholm" } }
{ "_id" : "fddf0248-e6e7-44e3-9113-4db9d639f965", "count" : 9, "user" : { "balance" : 1.5003614438231991, "city" : "Amsterdam" } }

Find users with zero purchases

db.users.aggregate([
  {$lookup: {from: "userCardActions", localField: "id", foreignField: "userId", as: "cardPayments"}},
  {$unwind: "$cardPayments"},
  {$match: {"cardPayments.action": "pay"}},
  {$project: {_id: "$id", handle: "$identity.handle", city: "$city", cardId: "$cardPayments.cardId"}},
  {$group: {_id: "$_id", handle: {$first: "$handle"}, city: {$first: "$city"}, count: {$sum: 1}}},
  {$sort: {count: -1}}
])

{ "_id" : "81b62690-81e0-4561-9eba-1b0c84dcc9ab", "handle" : "carl", "city" : "Palo Alto", "count" : 389 }
{ "_id" : "bb7fe532-2c5f-4e8f-9ceb-29fcacad53fd", "handle" : "kduffie", "city" : "Palo Alto", "count" : 304 }
{ "_id" : "07079e4d-5b7b-4490-afa4-ac2e4934abed", "handle" : "shihn", "city" : "Fremont", "count" : 292 }
{ "_id" : "eea3209f-9bcb-4cd7-ad25-cc165f0c5661", "handle" : "patricia", "city" : "Montreal", "count" : 110 }
{ "_id" : "0c4a28fd-6a3b-42ca-adfe-4dfc89cc47e5", "handle" : "eric", "city" : "Pittsburgh", "count" : 62 }
{ "_id" : "42d5089c-1a72-49db-89ee-a0c05f7162a8", "handle" : "datastories", "city" : "San Jose", "count" : 54 }
{ "_id" : "9f3e9d8f-5913-4e13-b1b2-c48a64fed5b6", "handle" : null, "city" : "Warren", "count" : 43 }
{ "_id" : "24037b50-f7a4-465f-92fe-42831ef82ad3", "handle" : "flashfanatic", "city" : "Johnstown", "count" : 41 }
{ "_id" : "bb30b0ad-2fae-42e8-8da0-263d0f19f192", "handle" : null, "city" : "Lagos", "count" : 40 }
{ "_id" : "01d0dfa1-eb3c-4131-8b24-b9ca08250161", "handle" : null, "city" : "New York", "count" : 39 }
{ "_id" : "6e6b17ba-55f0-4fdc-a3d7-b3184272f879", "handle" : "lizabeth12349", "city" : "Oke Ila", "count" : 38 }
{ "_id" : "8d54cc09-d40e-4f85-85ea-d84283947f59", "handle" : "lliizz", "city" : "Palo Alto", "count" : 35 }
{ "_id" : "4beb6acb-e535-42e7-8f0c-4f3c7fac60fe", "handle" : null, "city" : "Sterling Heights", "count" : 33 }
{ "_id" : "46b4ba43-e942-42c0-a8ee-9ec7b94489f2", "handle" : "sosomeyes", "city" : "Lagos", "count" : 33 }
{ "_id" : "90da14be-7c8c-41b4-99d3-520d6d42eac2", "handle" : null, "city" : "Warren", "count" : 32 }
{ "_id" : "05f05e96-4ba5-4304-b00f-40b64b321b8a", "handle" : null, "city" : "New York", "count" : 32 }
{ "_id" : "d9e89963-f1e1-4c76-be8e-eab7ed28dc55", "handle" : "lets_do_this", "city" : "Central Lake", "count" : 31 }
{ "_id" : "14beeef7-d056-4d1c-aab7-25f594b94a5d", "handle" : null, "city" : "New York", "count" : 31 }
{ "_id" : "b52b54d7-a7e3-4620-8a49-be89646b34ce", "handle" : null, "city" : "Sterling Heights", "count" : 30 }
{ "_id" : "17238ec8-1072-4419-a60d-e7cea3fa63da", "handle" : null, "city" : "New York", "count" : 30 }

Find how many users for each number of card purchases

db.users.aggregate([
  {$lookup: {from: "userCardActions", localField: "id", foreignField: "userId", as: "cardPayments"}},
  {$unwind: "$cardPayments"},
  {$match: {"cardPayments.action": "pay"}},
  {$project: {_id: "$id", handle: "$identity.handle", city: "$city", cardId: "$cardPayments.cardId"}},
  {$group: {_id: "$_id", handle: {$first: "$handle"}, city: {$first: "$city"}, count: {$sum: 1}}},
  {$group: {_id: "$count", total: {$sum: 1}}},
  {$sort: {total: -1}}
])

{ "_id" : 1, "total" : 21125 }
{ "_id" : 2, "total" : 912 }
{ "_id" : 3, "total" : 346 }
{ "_id" : 4, "total" : 211 }
{ "_id" : 5, "total" : 168 }
{ "_id" : 9, "total" : 91 }
{ "_id" : 6, "total" : 76 }
{ "_id" : 7, "total" : 63 }
{ "_id" : 8, "total" : 46 }
{ "_id" : 10, "total" : 40 }
{ "_id" : 11, "total" : 24 }
{ "_id" : 20, "total" : 20 }
{ "_id" : 12, "total" : 18 }
{ "_id" : 27, "total" : 14 }
{ "_id" : 17, "total" : 12 }
{ "_id" : 15, "total" : 12 }
{ "_id" : 24, "total" : 12 }
{ "_id" : 13, "total" : 11 }
{ "_id" : 14, "total" : 10 }
{ "_id" : 28, "total" : 9 }

How many user have subscribed to at least one channel

db.channelUsers.aggregate([
  {$match: {subscriptionState: "subscribed"}},
  {$group: {_id: "$userId", count: {$sum: 1}}},
  {$sort: {count: -1}},
  {$group: {_id: "1", count: {$sum: 1}}}
])

{ "_id" : "1", "count" : 115 }

How many channels have at least one subscriber

db.channelUsers.aggregate([
  {$match: {subscriptionState: "subscribed"}},
  {$group: {_id: "$channelId", count: {$sum: 1}}},
  {$sort: {count: -1}},
  {$group: {_id: "1", count: {$sum: 1}}}
])

{ "_id" : "1", "count" : 104 }

How many channels have at least one card

db.channelCards.aggregate([
  {$group: {_id: "$channelId", count: {$sum: 1}}},
  {$sort: {count: -1}},
  {$group: {_id: "1", count: {$sum: 1}}}
])

{ "_id" : "1", "count" : 365 }

How many different fingerprints bought a given card

db.userCardActions.aggregate([
  {$match: {cardId: "c8028025-6512-43a0-8f9f-fc01a06df4af", action: "pay"}},
  {$group: {_id: "$fromFingerprint", count: {$sum: 1}}},
  {$sort: {count: -1}}
])

db.userCardActions.aggregate([
  {$match: {cardId: "c8028025-6512-43a0-8f9f-fc01a06df4af", action: "pay"}},
  {$group: {_id: "$fromIpAddress", count: {$sum: 1}}},
  {$sort: {count: -1}}
])

Who are a channel's subscribers?

db.channelUsers.aggregate([
  {$match: {channelId: "30907d35-8934-48fd-90b7-179f05318bce", subscriptionState: "subscribed"}},
  {$lookup: {from: "users", localField: "userId", foreignField: "id", as: "user"}},
  {$unwind: "$user"},
  {$project: {_id: 1, userId: 1, count: 1, "user.identity.handle": 1, "user.balance": 1, "user.city": 1}}
])

{ "_id" : ObjectId("5a74e74875349f94e3aaef11"), "userId" : "12c6bb0c-f4d2-402c-9535-cdeae3214bdb", "user" : { "balance" : 1.4441097248479362, "city" : "Melbourne", "identity" : { "handle" : "jjchristie" } } }
{ "_id" : ObjectId("5a726d1a75349f94e33ef05e"), "userId" : "23f67aa0-a11c-4aa0-acbd-e134dfe46187", "user" : { "balance" : 1.950731004346869, "city" : "Hollywood", "identity" : { "handle" : "spokenwordnawledge" } } }
{ "_id" : ObjectId("5a6f85c475349f94e3b4b2b2"), "userId" : "4217a6c9-157f-45b3-bc50-fbeada986a59", "user" : { "balance" : 7.271767721388517, "city" : "San Juan", "identity" : { "handle" : "newenx" } } }
{ "_id" : ObjectId("5a70730875349f94e3289553"), "userId" : "5139e3d2-fc02-4bcd-bfa9-1380eb0badf2", "user" : { "balance" : 2.6742832396274347, "city" : "Vienna", "identity" : { "handle" : "vanderlamp" } } }
{ "_id" : ObjectId("5a76e70c75349f94e3c45217"), "userId" : "57f30778-7b4f-4fae-a903-3e88f35e3cc0", "user" : { "balance" : 1.3533645628023645, "city" : "High Wycombe", "identity" : { "handle" : "deezee42" } } }
{ "_id" : ObjectId("5a708bae75349f94e3344882"), "userId" : "60aa908a-61d8-47ec-afd5-1bee492fc487", "user" : { "balance" : 217.99301511749516, "city" : "Sampaloc", "identity" : { "handle" : "nehvolution" } } }
{ "_id" : ObjectId("5a6f99cd75349f94e3c09ba8"), "userId" : "74a3bba6-b70e-4d2d-8a66-b435093ddc2b", "user" : { "balance" : 1.9064486490139962, "city" : "Legden", "identity" : { "handle" : "bendismuzik" } } }
{ "_id" : ObjectId("5a705f5e75349f94e31fb1ce"), "userId" : "752d0e5e-c745-4581-a1d6-da80e2300db2", "user" : { "balance" : 2.246256992224452, "city" : "New Malden", "identity" : { "handle" : "legpuppy" } } }
{ "_id" : ObjectId("5a71dd4375349f94e3e7a969"), "userId" : "8abd23d8-e188-498f-aa34-e2ac1e6c92ca", "user" : { "balance" : 1.8501162252412275, "city" : "Ottawa", "identity" : { "handle" : "fedra" } } }
{ "_id" : ObjectId("5a6f97d975349f94e3bf37bd"), "userId" : "8b37de35-e4e9-4664-85b4-5ec5d810e7a9", "user" : { "balance" : 10.142047437165065, "city" : "Bradford", "identity" : { "handle" : "dnpq" } } }
{ "_id" : ObjectId("5a71c6d575349f94e3da56e6"), "userId" : "a73f399d-ae41-4fce-94bf-d86871667f59", "user" : { "balance" : 5.489063453229614, "city" : "Rome", "identity" : { "handle" : "bzur" } } }
{ "_id" : ObjectId("5a70f58f75349f94e36bfc28"), "userId" : "ab0d8401-5e2d-483c-870c-8ae3ee276d5f", "user" : { "balance" : 1.7577202078474004, "city" : "Toulouse", "identity" : { "handle" : "nemocanfly" } } }
{ "_id" : ObjectId("5a6f8b3875349f94e3b7cb1f"), "userId" : "af0ed60e-c7d9-499d-b893-b1629abf54e8", "user" : { "balance" : 24.742131811540872, "city" : "Wiesbaden", "identity" : { "handle" : "raven" } } }
{ "_id" : ObjectId("5a726d6d75349f94e33f1b29"), "userId" : "b5a0af2d-9ca9-4d0f-a7a0-955e67796045", "user" : { "balance" : 0.30321076730323326, "city" : "Ha Tinh", "identity" : { "handle" : "johnnysaigon" } } }
{ "_id" : ObjectId("5a70376875349f94e30cfd81"), "userId" : "b7fa2a35-5e7c-425d-b6dc-683db3ef0d32", "user" : { "balance" : 4.631378769268231, "city" : "Lawnton", "identity" : { "handle" : "peter" } } }
{ "_id" : ObjectId("5a6f78a475349f94e3ad71f9"), "userId" : "c4e3bd19-2bac-4a8a-8cee-079b52c7a04a", "user" : { "balance" : 5.944370554995349, "city" : "Marbella", "identity" : { "handle" : "gjart" } } }
{ "_id" : ObjectId("5a737e4975349f94e3d5e59a"), "userId" : "c8850b61-03fd-4f7b-97e7-893ac00fdc0b", "user" : { "balance" : 17.640253778392093, "city" : "Stockholm", "identity" : { "handle" : "kahsay" } } }
{ "_id" : ObjectId("5a70f8aa75349f94e36dd8bd"), "userId" : "dd96770a-bc77-4565-8e01-9441b7db979a", "user" : { "balance" : 417.0162178180795, "city" : "London", "identity" : { "handle" : "empireoflights" } } }
{ "_id" : ObjectId("5a6fcb9875349f94e3daf424"), "userId" : "e16250f5-bdcb-4f76-b5cc-2cd00cad58e7", "user" : { "balance" : 15.176661101275656, "city" : "Dela Paz Norte", "identity" : { "handle" : "gillianwanders" } } }
{ "_id" : ObjectId("5a72e86675349f94e381cbe7"), "userId" : "ee4e2955-beeb-4fe2-9d73-0caeb4631e2a", "user" : { "balance" : 6.212729483470439, "city" : "Talisay City", "identity" : { "handle" : "reyes_james6000" } } }
{ "_id" : ObjectId("5a70abe775349f94e3442d3d"), "userId" : "fc908765-f371-4166-a451-19cb3b34eff0", "user" : { "balance" : 3.8844996386060253, "city" : "Staten Island", "identity" : { "handle" : "indiebandguru" } } }


What are the first-time card purchases?

db.userCardActions.aggregate([
  {$match: {action: "pay"}},
  {$group: {_id: "userId", count: {$sum: 1}, firstAt: {$min: "$at"}}},
  {$lookup: {from: "users", localField: "_id", foreignField: "id", as: "user"}},
  {$unwind: "$user"},
  {$project: {_id: 1, firstAt: 1, count: 1, "user.identity.handle": 1, "user.balance": 1, "user.city": 1}},
  {$sort: {firstAt: -1}}
])

What is our total outstanding liability?

db.users.aggregate([
  {$match: {balance: {$gt: 5}}},
  {$project: {_id: "$id", netBalance: {$subtract: ["$balance", 5]}}},
  {$group: {_id: "1", count: {$sum: 1}, total: {$sum: "$netBalance"}}}
])

{ "_id" : "1", "count" : 107, "total" : 3796.834111345505 }

What is the total amount of all completed withdrawals?

db.manualWithdrawals.aggregate([
  {$match: {state: "paid"}},
  {$group: {_id: "1", count: {$sum: 1}, total: {$sum: "$amount"}}}
])

{ "_id" : "1", "count" : 105, "total" : 5331.89 }

Who is buying someone's cards?

db.userCardActions.aggregate([
  {$match: {authorId: "24de4c67-771f-4f0f-8ffd-ca60bee4922b", action: "pay"}},
  {$group: {_id: "$Id", count: {$sum: 1}}},
  {$lookup: {from: "users", localField:"_id", foreignField: "id", as: "user"}}, 
  {$unwind: "$user"},
  {$project: {_id: 1, userId: 1, count: "$count", "user.identity.handle": 1, "user.balance": 1, "user.ipAddress": 1, "user.city": 1}},
  {$sort: {count: -1}}
])

What is a given fingerprint buying?

db.userCardActions.aggregate([
  {$match: {fromFingerprint: "d867e987c3d63f21da5ed5b09ad6a2aa", action: "pay", at: {$gt: 1517480786000}}},
  {$group: {_id: "$cardId", count: {$sum: 1}}},
  {$sort: {count: -1}}
])

db.userCardActions.aggregate([
  {$match: {authorId: "24de4c67-771f-4f0f-8ffd-ca60bee4922b", action: "pay", at: {$gt: 1517480786000}}},
  {$group: {_id: "$fromFingerprint", count: {$sum: 1}}},
  {$sort: {count: -1}}
])

Fraud detection:  What authors have the most fraudulent purchase activity on their cards?

db.userCardActions.aggregate([
  {$match: {action: "pay", fromFingerprint: {$exists: true}, at: {$gt: 1517854506000}}},
  {$group: {_id: {fingerprint: "$fromFingerprint", cardId: "$cardId", authorId: "$authorId"}, count: {$sum: 1}}},
  {$sort: {count: -1}},
  {$match: {count: {$gt: 1}}},
  {$group: {_id: "$_id.authorId", total: {$sum: "$count"}}},
  {$sort: {total: -1}},
  {$lookup: {from: "users", localField:"_id", foreignField: "id", as: "user"}}, 
  {$unwind: "$user"},
  {$project: {_id: 1, total: "$total", "user.identity.handle": 1, "user.balance": 1, "user.ipAddress": 1, "user.city": 1}}
])

db.userCardActions.aggregate([
  {$match: {action: "pay", fraudReason: {$exists: true}, at: {$gt: 1517854506000}}},
  {$group: {_id: {cardId: "$cardId", authorId: "$authorId"}, count: {$sum: 1}}},
  {$sort: {count: -1}},
  {$group: {_id: "$_id.authorId", total: {$sum: "$count"}}},
  {$sort: {total: -1}},
  {$lookup: {from: "users", localField:"_id", foreignField: "id", as: "user"}}, 
  {$unwind: "$user"},
  {$project: {_id: 1, total: "$total", "user.identity.handle": 1, "user.balance": 1, "user.ipAddress": 1, "user.city": 1}}
])

db.userCardActions.aggregate([
  {$match: {action: "pay", fromFingerprint: {$exists: true}, at: {$gt: 1517854506000}}},
  {$group: {_id: {fingerprint: "$fromFingerprint", cardId: "$cardId", authorId: "$authorId"}, count: {$sum: 1}}},
  {$sort: {count: -1}}
])

db.userCardActions.aggregate([
  {$match: {action: "pay", fromFingerprint: {$exists: true}, fraudReason: {$exists: true}, at: {$gt: 1518035200000}}},
  {$group: {_id: {fingerprint: "$fromFingerprint", cardId: "$cardId"}, count: {$sum: 1}}},
  {$sort: {count: -1}},
  {$match: {count: {$gt: 1}}}
])

db.userCardActions.aggregate([
  {$match: {action: "pay", at: {$gt: 1518035200000}, fraudReason: {$exists: true}}},
  {$group: {_id: "$cardId", count: {$sum: 1}}},
  {$sort: {count: -1}}
])

db.userCardActions.aggregate([
  {$match: {action: "pay", at: {$gt: 1518035200000}}},
  {$group: {_id: {fingerprint: "$fromFingerprint", cardId: "$cardId", authorId: "$authorId"}, count: {$sum: 1}}},
  {$match: {count: {$gt: 1}}},

  {$sort: {count: -1}}
])

db.userCardActions.aggregate([
  {$match: {action: "pay", authorId: "24de4c67-771f-4f0f-8ffd-ca60bee4922b", at: {$gt: 1518195600000}}},
  {$group: {_id: {fingerprint: "$fromFingerprint", cardId: "$cardId"}, count: {$sum: 1}}},
  {$sort: {count: -1}}
])

db.userCardActions.aggregate([
  {$match: {action: "pay", fraudReason: {$exists: true}, at: {$gt: 1518195600000}}},
  {$group: {_id: {fingerprint: "$fromFingerprint", cardId: "$cardId", authorId: "$authorId"}, count: {$sum: 1}}},
  {$group: {_id: "$_id.authorId", total: {$sum: "$count"}}},
  {$sort: {total: -1}},
  {$lookup: {from: "users", localField:"_id", foreignField: "id", as: "user"}}, 
  {$unwind: "$user"},
  {$project: {_id: 1, total: "$total", "user.identity.handle": 1, "user.balance": 1, "user.ipAddress": 1, "user.city": 1}}
])

24de4c67-771f-4f0f-8ffd-ca60bee4922b

How much money has been spent by category since ?

db.bankTransactions.aggregate([
  {$match: {at: {$gt: 1517562817000}}},
  {$group: {_id: "$details.reason", total: {$sum: "$details.amount"}}}
])

How many users for each number of card purchases?

db.userCardActions.aggregate([
  {$match: {action: "pay"}},
  {$group: {_id: "$userId", count: {$sum: 1}}},
  {$group: {_id: "$count", users: {$sum: 1}}},
  {$sort: {_id: 1}}
])

db.userCardActions.aggregate([
  {$match: {action: "pay", fromFingerprint: {$exists: true}, fraudReason: {$exists: true}}},
  {$group: {_id: "$fromFingerprint", count: {$sum: 1}}},
  {$group: {_id: "$count", browsers: {$sum: 1}}},
  {$sort: {_id: 1}}
])

db.userCardActions.aggregate([
  {$match: {action: "pay", authorId: "7914d0dc-0d29-4958-bc00-3352ea87f5b0"}},
  {$group: {_id: {fingerprint: "$fromFingerprint", cardId: "$cardId"}, count: {$sum: 1}}},
  {$sort: {count: -1}}
])

db.userCardActions.aggregate([
  {$match: {action: "pay", authorId: "7914d0dc-0d29-4958-bc00-3352ea87f5b0"}},
  {$group: {_id: {ipAddress: "$fromIpAddress", cardId: "$cardId"}, count: {$sum: 1}}},
  {$sort: {count: -1}}
])

db.userRegistrations.aggregate([
  {$match: {fingerprint: "5c5d06b9a667d797ba43f306aada7123"}},
  {$group: {_id: "$ipAddress", count: {$sum: 1}}},
  {$sort: {count: -1}},
  {$lookup: {from: "ipAddresses", localField: "_id", foreignField: "ipAddress", as: "ip"}},
  {$unwind: "$ip"}
])

db.userCardActions.aggregate([
  {$match: {cardId: "d319fae8-6adb-4288-af44-e8de26dc9643", action: "pay"}},
  {$group: {_id: "$fromFingerprint", count: {$sum: 1}}},
  {$sort: {count: -1}}
])

db.userCardActions.aggregate([
  {$match: {cardId: "d319fae8-6adb-4288-af44-e8de26dc9643", action: "pay"}},
  {$group: {_id: "$fromIpAddress", count: {$sum: 1}}},
  {$sort: {count: -1}}
])

db.userCardActions.aggregate([
  {$match: {fromFingerprint: "5c5d06b9a667d797ba43f306aada7123", action: "pay"}},
  {$group: {_id: "$cardId", count: {$sum: 1}}},
  {$sort: {count: -1}}
])

db.userCardActions.aggregate([
  {$match: {action: "pay", authorId: "d283d558-053c-4711-a70b-d552d06a3f0b", at: {$gt: 1517677200000}, fraudReason: {$exists: true}}},
  {$group: {_id: "$cardId", count: {$sum: 1}}},
  {$sort: {count: -1}}
])

db.userCardActions.aggregate([
  {$match: {action: "pay", fraudReason: {$exists: true}}},
  {$group: {_id: "$fromFingerprint", count: {$sum: 1}}},
  {$sort: {count: -1}},
  {$lookup: {from: "userRegistrations", localField: "_id", foreignField: "fingerprint", as: "registration"}},
  {$unwind: "$registration"},
  {$match: {"registration.userAgent": {$exists: true}}},
  {$project: {count: "$count", ipAddress: "$registration.ipAddress", userId: "$registration.userId", userAgent: "$registration.userAgent"}},
  {$group: {_id: {fingerprint: "$_id", ua: "$userAgent"}, count: {$sum: 1}}},
  {$sort: {count: -1}}
])

db.userRegistrations.aggregate([
  {$match: {userAgent: {$exists: true}, fingerprint: "5a1bd9d9edf19bcb4b4dcc02b9bd2803"}},
  {$group: {_id: {fingerprint: "$fingerprint", ua: "$userAgent"}, count: {$sum: 1}}},
  {$sort: {count: -1}}
])

db.userRegistrations.aggregate([
  {$match: {userAgent: {$exists: true}}},
  {$group: {_id: {fingerprint: "$fingerprint", ua: "$userAgent"}, count: {$sum: 1}}},
  {$group: {_id: "$_id.fingerprint", count: {$sum: 1}}},
  {$sort: {count: -1}}
])

db.users.aggregate([
  {$match: {lastContact: {$gt: 1517158800000}}},
  {$bucket: {groupBy: "$balance", default: -999, boundaries: [-1, 0, 0.1, 0.5, 1, 1.5, 2, 2.25, 2.5, 2.75, 3, 4, 5, 6, 7.5, 10, 50, 100, 500]}}
])

db.users.aggregate([
  {$match: {lastContact: {$gt: 1517158800000}, "identity.handle": {$exists: true}}},
  {$bucket: {groupBy: "$balance", default: -999, boundaries: [-1, 0, 0.1, 0.5, 1, 1.5, 2, 2.25, 2.5, 2.75, 3, 4, 5, 6, 7.5, 10, 50, 100, 500]}}
])


db.users.aggregate([
  {$match: {"identity.emailConfirmed": true, "curation": {$exists: false}}},
  {$lookup: {from: "channelUsers", localField: "_id", foreignField: "userId", as: "channelUser"}},
  {$match: {subscriptionState: "subscribed", }}
])

db.channelUsers.aggregate([
  {$match: {subscriptionState: "subscribed"}},
  {$group: {_id: "$userId", count: {$sum: 1}}},
  {$sort: {count: -1}}
])

db.channelUsers.distinct("userId", {subscriptionState: "subscribed"})

db.channelUsers.aggregate([
  {$match: {"identity.handle": {$exists: true}, id: {$nin: ["5139e3d2-fc02-4bcd-bfa9-1380eb0badf2",
	"07079e4d-5b7b-4490-afa4-ac2e4934abed",
	"81b62690-81e0-4561-9eba-1b0c84dcc9ab",
	"20da78ce-5904-4fa4-a682-0ad2903325b8",
	"98ded171-e54a-4c82-814c-228991f91b6b",
	"2f949347-dce4-4b6a-aa50-6744664831e9",
	"24de4c67-771f-4f0f-8ffd-ca60bee4922b",
	"6ea0c2a5-aee5-47bf-8de7-112619acbccf",
	"07cd402e-e2f1-44b4-8a04-fe6f588691c5",
	"bb7fe532-2c5f-4e8f-9ceb-29fcacad53fd",
	"7914d0dc-0d29-4958-bc00-3352ea87f5b0",
	"c4e3bd19-2bac-4a8a-8cee-079b52c7a04a",
	"d68f7f9a-4718-4668-881e-84f7f7873f28",
	"d6396062-9584-470b-bf87-9d031d0fc94a",
	"af0ed60e-c7d9-499d-b893-b1629abf54e8",
	"24037b50-f7a4-465f-92fe-42831ef82ad3",
	"4217a6c9-157f-45b3-bc50-fbeada986a59",
	"e4238fe3-6852-4031-97c4-0474e62269ff",
	"368475d1-5688-4d62-9e8f-5bccf7406e04",
	"c836afe4-8b7d-4109-8025-2c6c41b37511",
	"dd96770a-bc77-4565-8e01-9441b7db979a",
	"762592e8-3024-41d2-9d3c-5d11b2aeb10c",
	"b4eb01e3-c3dc-469c-9356-edbf25fb6b6a",
	"8d54cc09-d40e-4f85-85ea-d84283947f59",
	"8b37de35-e4e9-4664-85b4-5ec5d810e7a9",
	"74a3bba6-b70e-4d2d-8a66-b435093ddc2b",
	"6dc5fa2e-ca79-4247-81dd-42153057ab76",
	"57d3b252-2630-4d51-80ea-5a9637eeab5b",
	"9cea7795-92c9-4f60-ad38-34ab95e4b447",
	"a73f399d-ae41-4fce-94bf-d86871667f59",
	"90afa29a-fcff-4bfb-82a0-5f523e6071ab",
	"d283d558-053c-4711-a70b-d552d06a3f0b",
	"1e73f2dd-3811-4739-a7c5-4a7fbb26a00a",
	"e16250f5-bdcb-4f76-b5cc-2cd00cad58e7",
	"03a091bf-ee09-4532-91c1-ba4231bf6dd5",
	"0c4a28fd-6a3b-42ca-adfe-4dfc89cc47e5",
	"90eb7f93-9da4-4c24-a407-fdbe14f764ef",
	"7e38635f-a5a3-4449-b5df-bd6afaae0755",
	"9c317b58-3506-4317-8a8d-956c4baa2042",
	"fc908765-f371-4166-a451-19cb3b34eff0",
	"ab0d8401-5e2d-483c-870c-8ae3ee276d5f",
	"54806d28-c53a-44d3-8f33-836f0fb8937b",
	"b7fa2a35-5e7c-425d-b6dc-683db3ef0d32",
	"523162fd-e49a-4dc3-898f-035ef5b41ce7",
	"1225ad7f-9c7f-4c99-9a3b-d3500e21151e",
	"c8850b61-03fd-4f7b-97e7-893ac00fdc0b",
	"752d0e5e-c745-4581-a1d6-da80e2300db2",
	"d58fc157-7c2f-4fee-8d17-a6b0b24d971c",
	"8abd23d8-e188-498f-aa34-e2ac1e6c92ca",
	"60aa908a-61d8-47ec-afd5-1bee492fc487",
	"8239f464-a48d-40ab-ac08-e455cf63e863",
	"36471053-7078-4d9e-af9d-980ba9965ff2",
	"334067fd-d93e-4db2-80c9-003c40b31576",
	"fd6f6b7b-cf2e-49a1-bfe7-71a5e20f3825",
	"635120c5-5138-4837-8587-08bdde0eef5b",
	"84a8398c-e500-46e6-b54f-199677125e73",
	"4a85f821-db73-4392-9adb-7ea3915da539",
	"d9e0b14a-218b-4373-8ad2-1cd5fff23f72",
	"a8de46f4-9219-474b-abb4-59d46aed6854",
	"4c698621-60e1-48aa-9ccb-88793944588d",
	"13f78732-5ca1-45d1-86ee-f5224858274a",
	"db025e8f-4b16-4521-ab09-ed0f43e81c33",
	"b5a0af2d-9ca9-4d0f-a7a0-955e67796045",
	"3f0ba37b-8130-4f0e-83d0-22053c15772c",
	"30b0de60-47ba-4d15-8680-7c1e8c3f8d68",
	"22325455-32d5-48b2-b5ed-62976172ce9b",
	"fe37d0e0-7b9a-4921-8b5c-66b8b2722fa8",
	"00e7c0bd-1c3f-42e7-8579-19badc2bdcb2",
	"a59bddc6-3207-44a6-a8e9-57b6c593b8ff",
	"4c01870e-d225-4d9a-a02e-9f9f1dffac9d",
	"8eed6847-d0a5-4d31-95b6-f5a6e1982386",
	"57f30778-7b4f-4fae-a903-3e88f35e3cc0",
	"a11ac18b-276a-4880-b129-65db60ebac5f",
	"a7881246-0579-4c29-8749-9f4324acae65",
	"f9b4f07b-d9f0-4c1d-82b8-b20652f6d067",
	"0c4a0444-7889-4740-b200-b787c87b8ad8",
	"23f67aa0-a11c-4aa0-acbd-e134dfe46187",
	"3234382e-dbc0-426d-903b-f1b406fe7696",
	"ee4e2955-beeb-4fe2-9d73-0caeb4631e2a",
	"0e11b121-d746-4daa-921b-5af9e1ddc2a6",
	"cf0b2715-2470-4730-ae66-f306c0f1fcc8",
	"5d13ef84-e0dd-4b9e-8e92-0ba0b9a246a3",
	"72790af7-c711-4d61-9056-af55595bb62c",
	"ac4bd82e-ea9c-4f7f-84b2-a106d11a871d",
	"66f29b9c-1b6e-4309-8b3f-96e5e8dafe11",
	"b4159bbc-3fd3-4513-8ddc-af59edef36e8",
	"eea3209f-9bcb-4cd7-ad25-cc165f0c5661",
	"e808e073-27b2-4104-b700-5428135baefb",
	"6319bfb8-7f33-4a6e-83eb-d4b396788bd0",
	"3c7f7754-400b-49f8-8238-fe618f39e9b1",
	"f9501ebe-715b-448d-b616-836328a5d853",
	"1acb7ddd-db7c-4ff5-8d76-f26d126e2714",
	"bad0569a-b805-4872-a792-3f77b60132b9",
	"12c6bb0c-f4d2-402c-9535-cdeae3214bdb",
	"c031516c-8279-474c-a0d5-c63edd0144f7",
	"9f45cb9d-e22f-40e7-ba5f-52e9d33b3bc2",
	"146c5251-4a25-4145-b32c-d68f243eaebe",
	"e379b1de-ff52-47b9-98d4-84775b1b6c80",
	"1a2ad762-a5be-485c-a950-c890e4152c99",
	"70620906-6458-4c01-abc6-1597a324dafd",
	"d67b12b5-97c1-4deb-b2c5-315e57ee7f17",
	"738bb35c-8056-49cd-bf30-bd327e13724f",
	"63ad134e-41a9-4a05-9762-15b619065968",
	"7e7e9693-0d37-4118-bb2d-c3ca02046f31",
	"d669918c-af73-48dd-b14b-2497e68e9959",
	"0d6e3c65-5b0a-4675-a77b-f07cf1795e42",
	"6f857655-37be-4dba-89a3-1a5c95d256da",
	"352b0bca-fbf3-46be-bb66-8c2a863c94fb",
	"d604e817-7ab2-47e1-af35-71ad85e2bd10",
	"a5485318-fd20-4a42-be88-120f444dc058",
	"99c34f5e-7c52-4216-bb94-008b0d53cc0e",
	"0daa17c2-adeb-4ff3-962b-92d0cc46dcef",
	"d7c49887-e456-4902-91e4-fd5cb59106db",
	"8c84d032-259f-45bd-a03e-ff7104298891",
	"5dcae9d8-07d2-4d93-a432-314da3a44224",
	"05d64036-fc09-4112-bcd4-98e01bc29565",
	"355e61c2-9cef-483f-bad9-0f9d4b89e296",
	"84b728bf-3c64-43eb-a01b-7420d4924c3d",
	"bbab14ca-44d9-401a-a1fc-7eb0e09301db",
	"6164dad4-2a30-41bd-b7e0-51ef46dc8fff",
	"adb6228f-b22c-49e1-a0ea-bbc228cff849",
	"6193fc33-9526-4da0-bcba-89a627f7ace1",
	"74bca8ad-afa1-449e-9836-b39e75c0957f",
	"2aedc157-1960-4674-80b7-bb537d4e1e43",
	"842aa546-3244-478b-8f3b-d728e573d1d3",
	"6c5bbe66-40e9-4802-bbb5-098f55293b40",
	"c72eda01-49e5-4788-b908-8afb1772dece",
	"5cfb347a-319c-4eee-bb0f-cafcd27b5aa0",
	"d3b05bc3-4697-4f14-8e87-fed892a618dc",
	"a3bd5476-6bb6-47ff-966f-4817167bff9b",
	"b04aeb42-e759-487c-9b25-2e52886ae3c8",
	"e6f3251e-996d-4668-9816-cb1c03598b97",
	"ce6c6812-1077-4e31-89da-aad4c30d516e",
	"49596f75-83b1-4665-adac-8d1024da6617",
	"a3741d4f-8864-4eb9-9a48-66bc893d3631",
	"9cfda464-cced-4d2d-b6f5-089c58d34c95",
	"73a37e01-b991-41d3-8cd0-e735b9358e87",
	"cd3f63eb-c291-446d-a2d4-d0024c1bfd3a",
	"9e920c6b-9046-4870-94e7-0a44212d7822",
	"f1ad128f-2472-45a2-80d6-1f06ae294ea8",
	"ccdfc97d-aa4a-40f8-8699-20ef17255244",
	"9dc5a464-14fb-4bdc-91f7-aed89b1d44b3",
	"ee8acede-d405-42f7-b163-d9b5e9d2653f",
	"55080bfa-14f9-489d-8b96-380dc66a4ff0"]}}},

])

db.users.count({"identity.handle": {$exists: true}, id: {$nin: ["5139e3d2-fc02-4bcd-bfa9-1380eb0badf2",
	"07079e4d-5b7b-4490-afa4-ac2e4934abed",
	"81b62690-81e0-4561-9eba-1b0c84dcc9ab",
	"20da78ce-5904-4fa4-a682-0ad2903325b8",
	"98ded171-e54a-4c82-814c-228991f91b6b",
	"2f949347-dce4-4b6a-aa50-6744664831e9",
	"24de4c67-771f-4f0f-8ffd-ca60bee4922b",
	"6ea0c2a5-aee5-47bf-8de7-112619acbccf",
	"07cd402e-e2f1-44b4-8a04-fe6f588691c5",
	"bb7fe532-2c5f-4e8f-9ceb-29fcacad53fd",
	"7914d0dc-0d29-4958-bc00-3352ea87f5b0",
	"c4e3bd19-2bac-4a8a-8cee-079b52c7a04a",
	"d68f7f9a-4718-4668-881e-84f7f7873f28",
	"d6396062-9584-470b-bf87-9d031d0fc94a",
	"af0ed60e-c7d9-499d-b893-b1629abf54e8",
	"24037b50-f7a4-465f-92fe-42831ef82ad3",
	"4217a6c9-157f-45b3-bc50-fbeada986a59",
	"e4238fe3-6852-4031-97c4-0474e62269ff",
	"368475d1-5688-4d62-9e8f-5bccf7406e04",
	"c836afe4-8b7d-4109-8025-2c6c41b37511",
	"dd96770a-bc77-4565-8e01-9441b7db979a",
	"762592e8-3024-41d2-9d3c-5d11b2aeb10c",
	"b4eb01e3-c3dc-469c-9356-edbf25fb6b6a",
	"8d54cc09-d40e-4f85-85ea-d84283947f59",
	"8b37de35-e4e9-4664-85b4-5ec5d810e7a9",
	"74a3bba6-b70e-4d2d-8a66-b435093ddc2b",
	"6dc5fa2e-ca79-4247-81dd-42153057ab76",
	"57d3b252-2630-4d51-80ea-5a9637eeab5b",
	"9cea7795-92c9-4f60-ad38-34ab95e4b447",
	"a73f399d-ae41-4fce-94bf-d86871667f59",
	"90afa29a-fcff-4bfb-82a0-5f523e6071ab",
	"d283d558-053c-4711-a70b-d552d06a3f0b",
	"1e73f2dd-3811-4739-a7c5-4a7fbb26a00a",
	"e16250f5-bdcb-4f76-b5cc-2cd00cad58e7",
	"03a091bf-ee09-4532-91c1-ba4231bf6dd5",
	"0c4a28fd-6a3b-42ca-adfe-4dfc89cc47e5",
	"90eb7f93-9da4-4c24-a407-fdbe14f764ef",
	"7e38635f-a5a3-4449-b5df-bd6afaae0755",
	"9c317b58-3506-4317-8a8d-956c4baa2042",
	"fc908765-f371-4166-a451-19cb3b34eff0",
	"ab0d8401-5e2d-483c-870c-8ae3ee276d5f",
	"54806d28-c53a-44d3-8f33-836f0fb8937b",
	"b7fa2a35-5e7c-425d-b6dc-683db3ef0d32",
	"523162fd-e49a-4dc3-898f-035ef5b41ce7",
	"1225ad7f-9c7f-4c99-9a3b-d3500e21151e",
	"c8850b61-03fd-4f7b-97e7-893ac00fdc0b",
	"752d0e5e-c745-4581-a1d6-da80e2300db2",
	"d58fc157-7c2f-4fee-8d17-a6b0b24d971c",
	"8abd23d8-e188-498f-aa34-e2ac1e6c92ca",
	"60aa908a-61d8-47ec-afd5-1bee492fc487",
	"8239f464-a48d-40ab-ac08-e455cf63e863",
	"36471053-7078-4d9e-af9d-980ba9965ff2",
	"334067fd-d93e-4db2-80c9-003c40b31576",
	"fd6f6b7b-cf2e-49a1-bfe7-71a5e20f3825",
	"635120c5-5138-4837-8587-08bdde0eef5b",
	"84a8398c-e500-46e6-b54f-199677125e73",
	"4a85f821-db73-4392-9adb-7ea3915da539",
	"d9e0b14a-218b-4373-8ad2-1cd5fff23f72",
	"a8de46f4-9219-474b-abb4-59d46aed6854",
	"4c698621-60e1-48aa-9ccb-88793944588d",
	"13f78732-5ca1-45d1-86ee-f5224858274a",
	"db025e8f-4b16-4521-ab09-ed0f43e81c33",
	"b5a0af2d-9ca9-4d0f-a7a0-955e67796045",
	"3f0ba37b-8130-4f0e-83d0-22053c15772c",
	"30b0de60-47ba-4d15-8680-7c1e8c3f8d68",
	"22325455-32d5-48b2-b5ed-62976172ce9b",
	"fe37d0e0-7b9a-4921-8b5c-66b8b2722fa8",
	"00e7c0bd-1c3f-42e7-8579-19badc2bdcb2",
	"a59bddc6-3207-44a6-a8e9-57b6c593b8ff",
	"4c01870e-d225-4d9a-a02e-9f9f1dffac9d",
	"8eed6847-d0a5-4d31-95b6-f5a6e1982386",
	"57f30778-7b4f-4fae-a903-3e88f35e3cc0",
	"a11ac18b-276a-4880-b129-65db60ebac5f",
	"a7881246-0579-4c29-8749-9f4324acae65",
	"f9b4f07b-d9f0-4c1d-82b8-b20652f6d067",
	"0c4a0444-7889-4740-b200-b787c87b8ad8",
	"23f67aa0-a11c-4aa0-acbd-e134dfe46187",
	"3234382e-dbc0-426d-903b-f1b406fe7696",
	"ee4e2955-beeb-4fe2-9d73-0caeb4631e2a",
	"0e11b121-d746-4daa-921b-5af9e1ddc2a6",
	"cf0b2715-2470-4730-ae66-f306c0f1fcc8",
	"5d13ef84-e0dd-4b9e-8e92-0ba0b9a246a3",
	"72790af7-c711-4d61-9056-af55595bb62c",
	"ac4bd82e-ea9c-4f7f-84b2-a106d11a871d",
	"66f29b9c-1b6e-4309-8b3f-96e5e8dafe11",
	"b4159bbc-3fd3-4513-8ddc-af59edef36e8",
	"eea3209f-9bcb-4cd7-ad25-cc165f0c5661",
	"e808e073-27b2-4104-b700-5428135baefb",
	"6319bfb8-7f33-4a6e-83eb-d4b396788bd0",
	"3c7f7754-400b-49f8-8238-fe618f39e9b1",
	"f9501ebe-715b-448d-b616-836328a5d853",
	"1acb7ddd-db7c-4ff5-8d76-f26d126e2714",
	"bad0569a-b805-4872-a792-3f77b60132b9",
	"12c6bb0c-f4d2-402c-9535-cdeae3214bdb",
	"c031516c-8279-474c-a0d5-c63edd0144f7",
	"9f45cb9d-e22f-40e7-ba5f-52e9d33b3bc2",
	"146c5251-4a25-4145-b32c-d68f243eaebe",
	"e379b1de-ff52-47b9-98d4-84775b1b6c80",
	"1a2ad762-a5be-485c-a950-c890e4152c99",
	"70620906-6458-4c01-abc6-1597a324dafd",
	"d67b12b5-97c1-4deb-b2c5-315e57ee7f17",
	"738bb35c-8056-49cd-bf30-bd327e13724f",
	"63ad134e-41a9-4a05-9762-15b619065968",
	"7e7e9693-0d37-4118-bb2d-c3ca02046f31",
	"d669918c-af73-48dd-b14b-2497e68e9959",
	"0d6e3c65-5b0a-4675-a77b-f07cf1795e42",
	"6f857655-37be-4dba-89a3-1a5c95d256da",
	"352b0bca-fbf3-46be-bb66-8c2a863c94fb",
	"d604e817-7ab2-47e1-af35-71ad85e2bd10",
	"a5485318-fd20-4a42-be88-120f444dc058",
	"99c34f5e-7c52-4216-bb94-008b0d53cc0e",
	"0daa17c2-adeb-4ff3-962b-92d0cc46dcef",
	"d7c49887-e456-4902-91e4-fd5cb59106db",
	"8c84d032-259f-45bd-a03e-ff7104298891",
	"5dcae9d8-07d2-4d93-a432-314da3a44224",
	"05d64036-fc09-4112-bcd4-98e01bc29565",
	"355e61c2-9cef-483f-bad9-0f9d4b89e296",
	"84b728bf-3c64-43eb-a01b-7420d4924c3d",
	"bbab14ca-44d9-401a-a1fc-7eb0e09301db",
	"6164dad4-2a30-41bd-b7e0-51ef46dc8fff",
	"adb6228f-b22c-49e1-a0ea-bbc228cff849",
	"6193fc33-9526-4da0-bcba-89a627f7ace1",
	"74bca8ad-afa1-449e-9836-b39e75c0957f",
	"2aedc157-1960-4674-80b7-bb537d4e1e43",
	"842aa546-3244-478b-8f3b-d728e573d1d3",
	"6c5bbe66-40e9-4802-bbb5-098f55293b40",
	"c72eda01-49e5-4788-b908-8afb1772dece",
	"5cfb347a-319c-4eee-bb0f-cafcd27b5aa0",
	"d3b05bc3-4697-4f14-8e87-fed892a618dc",
	"a3bd5476-6bb6-47ff-966f-4817167bff9b",
	"b04aeb42-e759-487c-9b25-2e52886ae3c8",
	"e6f3251e-996d-4668-9816-cb1c03598b97",
	"ce6c6812-1077-4e31-89da-aad4c30d516e",
	"49596f75-83b1-4665-adac-8d1024da6617",
	"a3741d4f-8864-4eb9-9a48-66bc893d3631",
	"9cfda464-cced-4d2d-b6f5-089c58d34c95",
	"73a37e01-b991-41d3-8cd0-e735b9358e87",
	"cd3f63eb-c291-446d-a2d4-d0024c1bfd3a",
	"9e920c6b-9046-4870-94e7-0a44212d7822",
	"f1ad128f-2472-45a2-80d6-1f06ae294ea8",
	"ccdfc97d-aa4a-40f8-8699-20ef17255244",
	"9dc5a464-14fb-4bdc-91f7-aed89b1d44b3",
	"ee8acede-d405-42f7-b163-d9b5e9d2653f",
	"55080bfa-14f9-489d-8b96-380dc66a4ff0"]}})



  db.users.aggregate([
    {$match: {"identity.emailAddress": {$exists: true}, "curation": {$exists: false}}},
    {$lookup: {from: "userCardActions", localField: "id", foreignField: "userId", as: "action"}},
    {$group: {_id: {userId: "$id", authorId:"action.authorId"}, count: {$sum: 1}}},    
    {$sort: {"count": -1}}
  ])

  db.userCardActions.aggregate([
    {$match: {action: "pay"}},
    {$group: {_id: {userId: "$userId", authorId: "$authorId"}, count: {$sum: 1}}},
    {$lookup: {from: "users", localField: "_id.userId", foreignField: "id", as: "user"}},
    {$unwind: "$user"},
    {$project: {email: "$user.identity.emailAddress"}},
    {$match: {email: {$exists: true}}},
    {$group: {_id: "$email", authorId: {$push: "$_id.authorId"}}},
    {$unwind: "$authorId"},
    {$lookup: {from: "users", localField: "authorId", foreignField: "id", as: "author"}},
    {$project: {authorId: "$author.id", authorHandle: "$author.identity.handle", lastPosted: "$author.lastPosted"}},
    {$sort: {lastPosted: -1}},
    {$group: {_id: "_id", authorId: {$first: "$authorId"}}},
  ])

  db.userCardActions.aggregate([
    {$match: {action: "pay"}},
    {$group: {_id: {userId: "$userId", authorId: "$authorId"}, count: {$sum: 1}}},
    {$lookup: {from: "users", localField: "_id.userId", foreignField: "id", as: "user"}},
    {$unwind: "$user"},
    {$project: {email: "$user.identity.emailAddress"}},
    {$match: {email: {$exists: true}}},
    {$group: {_id: "$email", authorId: {$push: "$_id.authorId"}}},
    {$unwind: "$authorId"},
    {$lookup: {from: "users", localField: "authorId", foreignField: "id", as: "author"}},
    {$unwind: "$author"},
    {$project: {authorId: "$author.id", authorHandle: "$author.identity.handle", lastPosted: "$author.lastPosted"}},
    {$match: {lastPosted: {$gt: 1517158800000}}},
    {$sort: {_id: 1, lastPosted: -1}},
    {$group: {_id: "$_id", lastPosted: {$first: "$lastPosted"}}},
    {$sort: {_id: 1}}
  ])

  db.userCardActions.aggregate([
    {$match: {action: "pay"}},
    {$group: {_id: {userId: "$userId", authorId: "$authorId"}, count: {$sum: 1}}},
    {$lookup: {from: "users", localField: "_id.userId", foreignField: "id", as: "user"}},
    {$unwind: "$user"},
    {$project: {email: "$user.identity.emailAddress"}}
  ])

  db.userCardActions.aggregate([
    {$match: {action: "pay"}},
    {$group: {_id: {userId: "$userId", authorId: "$authorId"}, count: {$sum: 1}}},
    {$lookup: {from: "users", localField: "_id.userId", foreignField: "id", as: "user"}},
    {$unwind: "$user"}
  ])

  db.adSlots.aggregate([
    {$match: {status: {$ne: "pending"}, created: {$gt: 1518508800000}}},
    {$group: {_id: "$userId", count: {$sum: 1}}},
    {$group: {_id: "count", totalUsers: {$sum: 1}}}
  ])

  db.adSlots.aggregate([
    {$match: {status: {$ne: "pending"}, redeemed: true}},
    {$group: {_id: "$userId", count: {$sum: 1}}},
    {$group: {_id: "count", totalUsers: {$sum: 1}}}
  ])


  db.users.aggregate([
  { $match: { type: 'normal', admin: false } },
  { $project: { added: "$added", balance: "$balance", withIdentity: { $cond: { if: { $eq: ["$identity.handle", undefined] }, then: 0, else: 1 } } } },
  {
    $bucket: {
      groupBy: "$added",
      boundaries: [0, 1518195600000, 1518282000000, 1518368400000, 1518454800000, 1518809800000],
      default: -1,
      output: {
        total: { $sum: 1 },
        withIdentity: { $sum: "$withIdentity" },
        balance: { $sum: "$balance" },
        balanceWithIdentity: { $sum: { $multiply: ["$balance", "$withIdentity"] } }
      }
    }
  },
])

db.users.aggregate([
   { $match: { type: 'normal', admin: false } },
   { $project: { added: "$added", balance: "$balance", withIdentity: { $cond: { if: { $eq: ["$identity.handle", undefined] }, then: 0, else: 1 } } } },
   {
     $bucket: {
       groupBy: "$added",       
       boundaries: [0, 1518195600000, 1518282000000, 1518368400000, 1518454800000, 1518809800000],
       default: -1,
       output: {
         total: { $sum: 1 },
         withIdentity: { $sum: "$withIdentity" },
         balance: { $sum: "$balance" },
         balanceWithIdentity: { $sum: { $multiply: ["$balance", "$withIdentity"] } }
       }
     }
   },
  { $project: { periodStarting: "$_id", newUsers: "$total", newUsersWithIdentity: "$withIdentity", totalBalance: "$balance", totalBalanceWithIdentity: "$balanceWithIdentity" } }
 ])


[0, 1518336000000, 1518422400000, 1518508800000, 1518595200000, 1518681600000, 1518768000000, 1518854400000, 1518922984373]
db.users.aggregate([
   { $match: { type: 'normal', admin: false } },
   { $project: { added: "$added", balance: "$balance", withIdentity: { $cond: { if: { $eq: ["$identity.handle", undefined] }, then: 0, else: 1 } } } },
   {
     $bucket: {
       groupBy: "$added",
       boundaries: [0, 1518195600000, 1518282000000, 1518368400000, 1518454800000, 1518809800000],
       default: -1,
       output: {
         total: { $sum: 1 },
         withIdentity: { $sum: "$withIdentity" },
         balance: { $sum: "$balance" },
         balanceWithIdentity: { $sum: { $multiply: ["$balance", "$withIdentity"] } }
       }
     }
   }
 ])

 db.users.aggregate([
      { $match: { type: 'normal', admin: false } },
      { $project: { 
        added: "$added", 
        balance: {$max: [{ $subtract: ["$balance", 5] }, 0]},
        withIdentity: { $cond: { if: { $eq: ["$identity.handle", undefined] }, then: 0, else: 1 } }, 
        returning: { $cond: { if: { $gt: [{ $subtract: ["$lastContact", "$added"] }, 43200000] }, then: 1, else: 0 } }, 
        publisher: { $cond: { if: { $gt: ["$lastPosted", 0] }, then: 1, else: 0 } },
        storage: "$storage" 
        } 
      },
      {
        $bucket: {
          groupBy: "$added",
          boundaries: [0, 1518336000000, 1518422400000, 1518508800000, 1518595200000, 1518681600000, 1518768000000, 1518854400000, 1518922984373],
          default: -1,
          output: {
            total: { $sum: 1 },
            withIdentity: { $sum: "$withIdentity" },
            balance: { $sum: "$balance" },
            balanceWithIdentity: { $sum: { $multiply: ["$balance", "$withIdentity"] } },
            returning: { $sum: "$returning" },
            returningWithIdentity: { $sum: { $multiply: ["$withIdentity", "$returning"] } },
            publishers: {$sum: "$publisher"},
            storage: {$sum: "$storage"}
          }
        }
      }
      ,
      { $project: { periodStarting: "$_id", newUsers: "$total", newUsersWithIdentity: "$withIdentity", totalBalance: "$balance", totalBalanceWithIdentity: "$balanceWithIdentity", returning: "$returning", returningWithIdentity: "$returningWithIdentity", publishers: "$publishers", storage: "$storage" } }
    ])

    db.users.aggregate([
      { $match: { type: 'normal', admin: false } },
      {
        $project: {
          added: "$added",
          balance: { $max: [{ $subtract: ["$balance", 5] }, 0] },
          withIdentity: { $cond: { if: { $eq: ["$identity.handle", undefined] }, then: 0, else: 1 } },
          returning: { $cond: { if: { $gt: [{ $subtract: ["$lastContact", "$added"] }, 43200000] }, then: 1, else: 0 } },
          publisher: { $cond: { if: { $gt: ["$lastPosted", 0] }, then: 1, else: 0 } },
          storage: "$storage"
        }
      },

      {
        $bucket: {
          groupBy: "$added",
          boundaries: [0, 1518336000000, 1518422400000, 1518508800000, 1518595200000, 1518681600000, 1518768000000, 1518854400000, 1518922984373],
          default: -1,
          output: {
            newUsers: { $sum: 1 },
            newUsersWithIdentity: { $sum: "$withIdentity" },
            totalBalance: { $sum: "$balance" },
            totalBalanceWithIdentity: { $sum: { $multiply: ["$balance", "$withIdentity"] } },
            returning: { $sum: "$returning" },
            returningWithIdentity: { $sum: { $multiply: ["$withIdentity", "$returning"] } },
            publishers: { $sum: "$publisher" },
            storage: { $sum: "$storage" }
          }
        }
      }
    ])

db.users.aggregate([{$project: {balance: {$max: [{$subtract: ["$balance", 5]}, 0]}}}, {$group: {_id: "1", total: {$sum: "$balance"}}}])

db.users.aggregate([
      { $match: { type: 'normal', admin: false } },
      {
        $project: {
          added: "$added",
          balance: { $max: [{ $subtract: ["$balance", 5] }, 0] },
          withIdentity: { $cond: { if: { $eq: ["$identity.handle", undefined] }, then: 0, else: 1 } },
          returning: { $cond: { if: { $gt: [{ $subtract: ["$lastContact", "$added"] }, 43200000] }, then: 1, else: 0 } },
          publisher: { $cond: { if: { $gt: ["$lastPosted", 0] }, then: 1, else: 0 } },
          storage: "$storage"
        }
      }
])
db.cards.aggregate([
  {$match: {type: "normal"}},
  {$project: {
    postedAt: "$postedAt",
    deleted: { $cond: { if: {$eq: ["$state", "active"]}, then: 0, else: 1 } },
    private: { $cond: { if: "$private", then: 1, else: 0 } },
    blocked: { $cond: { if: "$curation.block", then: 1, else: 0 } },
    ad: { $cond: { if: {$eq: ["$pricing.openFeeUnits", 0]}, then: 1, else: 0 } },
    promoted: {
      $cond: { 
        if: {
          $and: [
            {$gt: ["$pricing.openFeeUnits", 0]}, 
            {$gt: ["$pricing.promotionFee", 0]}
          ]
        }, 
        then: 1, 
        else: 0 
      } 
    },
    budget: "$budget.amount",
    spent: "$budget.spent",
    revenue: "$stats.revenue.value",
    refunds: "$stats.refunds.value",
  }},
  {$bucket: {
    groupBy: "$postedAt",
    boundaries: [0, 1518195600000, 1518282000000, 1518368400000, 1518454800000, 1518809800000],
    default: -1,
    output: {
      total: {$sum: 1},
      deleted: {$sum: "$deleted" },
      private: {$sum: "$private" },
      blocked: {$sum: "$blocked"},
      ads: {$sum: "$ad"},
      promoted: {$sum: "$promoted"},
      budget: {$sum: "$budget"},
      spent: {$sum: "$spent"},
      revenue: {$sum: "$revenue"},
      refunds: {$sum: "$refunds"}
    }
  }}
])

    ad: { $cond: { if: {$eq: ["$pricing.openFeeUnits", 0]}, then: 1, else: 0 } },
    promoted: {$cond: { if: {$and: [{$gt: ["$pricing.openFeeUnits", 0]}, {$gt: [$pricing.promotionFee, 0]}]}, then: 1, else: 0 } },


db.userCardActions.aggregate([
  {$match: {action: "pay"}},
    {$project: {
    at: "$at",
    firstTime: { $cond: { if: {$eq: ["$payment.category", "first"]}, then: 0, else: 1 } },
    normal: { $cond: { if: {$eq: ["$payment.category", "normal"]}, then: 0, else: 1 } },
    fan: { $cond: { if: {$eq: ["$payment.category", "fan"]}, then: 0, else: 1 } },
    fraud: { $cond: { if: {$eq: ["$payment.category", "fraud"]}, then: 0, else: 1 } },
    amount: "$payment.amount",
    weightedRevenue: "$payment.weightedRevenue",
    userId: "$userId",
    authorId: "$authorId"
  }},
  {$bucket: {
    groupBy: "$at",
    boundaries: [0, 1518195600000, 1518282000000, 1518368400000, 1518454800000, 2518809800000],
    default: -1,
    output: {
      total: {$sum: 1},
      firstTime: {$sum: "$firstTime"},
      normal: {$sum: "$normal"},
      fan: {$sum: "$fan"},
      fraud: {$sum: "$fraud"},
      revenue: {$sum: "$amount"},
      weightedRevenue: {$sum: "$weightedRevenue"},
      purchasers: {$addToSet: "$userId"},
      sellers: {$addToSet: "$authorId"}
    }
  }},
  {$project: {
    total: "$total", 
    firstTime: "$firstTime",
    normal: "$normal",
    fan: "$fan",
    fraud: "$fraud",
    revenue: "$revenue",
    weightedRevenue: "$weightedRevenue",
    purchasers: {$size: "$purchasers"},
    sellers: {$size: "$sellers"}
  }}
])


db.adSlots.aggregate([
  {$match: {status: {$ne: "pending"}}},
  {$project: {
    created: "$created",
    impressionAd: { $cond: { if: {$eq: ["$type", "impression-ad"]}, then: 1, else: 0 } },
    impressionContent: { $cond: { if: {$eq: ["$type", "impression-content"]}, then: 1, else: 0 } },
    openPayment: { $cond: { if: {$eq: ["$type", "open-payment"]}, then: 1, else: 0 } },
    clickPayment: { $cond: { if: {$eq: ["$type", "click-payment"]}, then: 1, else: 0 } },
    announcement: { $cond: { if: {$eq: ["$type", "announcement"]}, then: 1, else: 0 } },
    pending: { $cond: { if: {$eq: ["$status", "pending"]}, then: 1, else: 0 } },
    impression: { $cond: { if: {$eq: ["$status", "impression"]}, then: 1, else: 0 } },
    opened: { $cond: { if: {$eq: ["$status", "opened"]}, then: 1, else: 0 } },
    openPaid: { $cond: { if: {$eq: ["$status", "open-paid"]}, then: 1, else: 0 } },
    clicked: { $cond: { if: {$eq: ["$status", "clicked"]}, then: 1, else: 0 } },
    redemptionFailed: { $cond: { if: {$eq: ["$status", "redemption-failed"]}, then: 1, else: 0 } },
    impressionsAmount: { $cond: { if: {$and: [{$eq: ["$status", "impression"]}, "$redeemed"]}, then: "$amount", else: 0 } },
    opensAmount: { $cond: { if: {$and: [{$eq: ["$status", "open-paid"]}, "$redeemed"]}, then: "$amount", else: 0 } },
    clicksAmount: { $cond: { if: {$and: [{$eq: ["$status", "clicked"]}, "$redeemed"]}, then: "$amount", else: 0 } },
    userId: "$userId",
    authorId: "$authorId"
  }},
  {$bucket: {
    groupBy: "$created",
    boundaries: [0, 1518195600000, 1518282000000, 1518368400000, 1518454800000, 2518809800000],
    default: -1,
    output: {
      total: {$sum: 1},
      impressionAd: {$sum: "$impressionAd"},
      impressionContent: {$sum: "$impressionContent"},
      openPayment: {$sum: "$openPayment"},
      clickPayment: {$sum: "$clickPayment"},
      announcement: {$sum: "$announcement"},
      impression: {$sum: "$impression"},
      opened: {$sum: "$opened"},
      openPaid: {$sum: "$openPaid"},
      clicked: {$sum: "$clicked"},
      redemptionFailed: {$sum: "$redemptionFailed"},
      impressionsRevenue: {$sum: "$impressionsAmount"},      
      opensRevenue: {$sum: "$opensAmount"},      
      clicksRevenue: {$sum: "$clicksAmount"},  
      consumers: {$addToSet: "$userId"},
      advertisers: {$addToSet: "$authorId"}    
    }
  }},
  {$project: {
    total: "$total", 
    impressionAd: "$impressionAd",
    impressionContent: "$impressionContent",
    openPayment: "$openPayment",
    clickPayment: "$clickPayment",
    announcement: "$announcement",
    impression: "$impression",
    opened: "$opened",
    openPaid: "$openPaid",
    clicked: "$clicked",
    redemptionFailed: "$redemptionFailed",
    impressionsRevenue: "$impressionsRevenue",
    opensRevenue: "$opensRevenue",
    clicksRevenue: "$clicksRevenue",
    consumers: {$size: "$consumers"},
    advertisers: {$size: "$advertisers"}
  }}
])


db.users.aggregate([
      {
        $group: {
          _id: "all",
          total: { $sum: 1 },
          withIdentity: { $sum: { $cond: { if: { $ne: ["$identity.handle", undefined] }, then: 1, else: 0 } } },
          excessBalance: { $sum: { $max: [0, { $subtract: ["$balance", 5] }] } },
          activeWithinPastWeek: {
            $sum: { $cond: { if: { $gt: ["$lastContact", 1518372906000] }, then: 1, else: 0 } }
          },
          returningUsersWithinPastWeek: {
              $sum: { $cond: { 
                if: { $and: [
                  { $gt: ["$lastContact", 1518372906000] }, 
                  { $gt: [{$subtract: ["$lastContact","$added"]}, 43200000] }
                  ]}, 
                then: 1, 
                else: 0 } },
            }
          }
      }
    ])

db.users.aggregate([
  {$bucket: {
    groupBy: "$added",
    boundaries: [0, 1518195600000, 1518282000000, 1518368400000, 1518454800000, 2518809800000],
    default: -1,
    output: {
      newUsers: {$sum: 1},
      newUsersWithIdentity: { $sum: { $cond: { if: { $gt: ["$identity.handle", null] }, then: 1, else: 0 } } },
    }
  }}
])

db.userRegistrations.aggregate([
  {$bucket: {
    groupBy: "$at",
    boundaries: [1518195600000, 1518282000000, 1518368400000, 1518454800000, 2518809800000],
    default: -1,
    output: {
      count: {$sum: 1},
      userIds: {$addToSet: "$userId"}
    }
  }},
  {$lookup: {from: "users", localField: "userIds", foreignField: "id", as: "user"}},
  {$unwind: "$user"},
  {$project: {
    userId: "$user.id", 
    hasIdentity: {$cond: {if: {$gt: ["$user.identity.handle", null]}, then: 1, else: 0}}, 
    returning: {$cond: {if: {$gt: [
      {$subtract: ["$user.lastContact", "$user.added"]},
      43200000
    ]}, then: 1, else: 0}},
    returningWithIdentity: {$cond: {if: {$and: [{$gt: [
      {$subtract: ["$user.lastContact", "$user.added"]},
      43200000
    ]}, {$gt: ["$user.identity.handle", null]}]}, then: 1, else: 0}}
  }},
  {$group: {_id: "$_id", users: {$sum: 1}, withIdentity: {$sum: "$hasIdentity"}, returning: {$sum: "$returning"}, returningWithIdentity: {$sum: "$returningWithIdentity"}}}
])

  {$lookup: {from: "users", localField: "$userIds", foreignField: "id", as: "user"}},
  {$unwind: "$user"},
  {$project: {
    userId: "$user.id", 
    hasIdentity: {$gt: ["$user.identity.handle", null]}, 
    returning: {$gt: [
      {$subtract: ["$user.lastContact", "$user.added"]},
      43200000
    ]}
  }}


db.userRegistrations.aggregate([
      {
        $bucket: {
          groupBy: "$at",
          boundaries: [0, 1518195600000, 1518282000000, 1518368400000, 1518454800000, 1518809800000],
          default: -1,
          output: {
            count: { $sum: 1 },
            userIds: { $addToSet: "$userId" }
          }
        }
      },
      { $lookup: { from: "users", localField: "userIds", foreignField: "id", as: "user" } },
      { $unwind: "$user" },
      {
        $project: {
          userId: "$user.id",
          withIdentity: { $cond: { if: { $gt: ["$user.identity.handle", null] }, then: 1, else: 0 } },
          returning: {
            $cond: {
              if: {
                $gt: [
                  { $subtract: ["$user.lastContact", "$user.added"] },
                  43200000
                ]
              },
              then: 1,
              else: 0
            }
          },
          returningWithIdentity: {
            $cond: {
              if: {
                $and: [
                  { $gt: [{ $subtract: ["$user.lastContact", "$user.added"] }, 43200000] },
                  { $gt: ["$user.identity.handle", null] }]
              },
              then: 1,
              else: 0
            }
          }
        }
      },
      { $group: { _id: "$_id", users: { $sum: 1 }, withIdentity: { $sum: "$hasIdentity" }, returning: { $sum: "$returning" }, returningWithIdentity: { $sum: "$returningWithIdentity" } } }
    ])


db.cards.aggregate([
  {$group: {
    _id: "all", 
    total: {$sum: 1}, 
    budget: {$sum: "$budget.amount"}, 
    spent: {$sum: "$budget.spent"}, 
    revenue: {$sum: "$stats.revenue.value"}
  }}
])

db.cards.aggregate([
      {
        $bucket: {
          groupBy: "$postedAt",
          boundaries: [0, 1518195600000, 1518282000000, 1518368400000, 1518454800000, 1518809800000],
          default: -1,
          output: {
            count: { $sum: 1 }
          }
        }
      }
    ])

db.userCardActions.aggregate([
  {$match: {action: "pay"}},
  {$group: {
    _id: "all", 
    total: {$sum: 1},
    totalRevenue: {$sum: "$payment.amount"},
    totalFraud: {$sum: {$cond: {if: {$eq: ["$payment.category", "fraud"]}, then: 1, else: 0}}},
    totalFirstTime: {$sum: {$cond: {if: {$eq: ["$payment.category", "first"]}, then: 1, else: 0}}},
  }}
])

db.userCardActions.aggregate([
    {$match: {action: "pay"}},
      {
        $bucket: {
          groupBy: "$at",
          boundaries: [0, 1518195600000, 1518282000000, 1518368400000, 1518454800000, 1518809800000],
          default: -1,
          output: {
            purchases: { $sum: 1 },
            revenue: {$sum: "$payment.amount"},
            weightedRevenue: {$sum: "$payment.weightedRevenue"},
            fraud: {$sum: {$cond: {if: {$eq: ["$payment.category", "fraud"]}, then: 1, else: 0}}},
            purchasers: {$addToSet: "$userId"},
            sellers: {$addToSet: "$authorId"}
          }
        }
      },
      {$project: {
        purchases: "$purchases",
        revenue: "$revenue",
        weightedRevenue: "$weightedRevenue",
        fraud: "$fraud",
        purchasers: {$size: "$purchasers"},
        sellers: {$size: "$sellers"}
      }}
    ])


db.adSlots.aggregate([
  {$match: {status: {$ne: "pending"}}},
  {$group: {
    _id: "all",
    total: {$sum: 1},
    revenue: {$sum: {$cond: {if: "$redeemed", then: "$amount", else: 0}}}
  }}
])

db.adSlots.aggregate([
  {$match: {status: {$ne: "pending"}}},
      {
        $bucket: {
          groupBy: "$created",
          boundaries: [0, 1518195600000, 1518282000000, 1518368400000, 1518454800000, 1518809800000],
          default: -1,
          output: {
            slots: { $sum: 1 },
            revenue: {$sum: {$cond: {if: "$redeemed", then: "$amount", else: 0}}},
            consumers: {$addToSet: "$userId"},
            advertisers: {$addToSet: "$authorId"}
          }
        }
      },
      {$project: {
        slots: "$slots",
        revenue: "$revenue",
        consumers: {$size: "$consumers"},
        advertisers: {$size: "$advertisers"}
      }}
    ])


Which authors and cards are making the most purchases lately?

db.userCardActions.aggregate([
  {$match: {action: "pay", at: {$gt: 1519286400000}, fraudReason: {$exists: false}}},
  {$group: {_id: {seller: "$authorId", cardId: "$cardId"}, count: {$sum: 1}, total: {$sum: "$payment.amount"}, weighted: {$sum: "$payment.weightedRevenue"} }},
  {$match: {count: {$gt: 1}}},
  {$lookup: {from: "users", localField:"_id.seller", foreignField: "id", as: "user"}}, 
  {$unwind: "$user"},
  {$project: {_id: 1, count: 1, total: 1, weighted: 1, "user.identity.handle": 1, "user.balance": 1, "user.city": 1, "user.country": 1}}, 
  {$sort: {count: -1}},
])



db.userCardActions.aggregate([
  {$match: {action: "pay", "payment.category": "fraud", at: {$gt: 1519027200000}}},
  {$group: {_id: {buyer: "$userId", seller: "$authorId"}, count: {$sum: 1} }},
  {$match: {count: {$gt: 1}}},
  {$sort: {count: -1}}
])

db.channelUsers.aggregate([
      { $match: { subscriptionState: "subscribed" } },
      {
        $bucket: {
          groupBy: "$lastUpdated",
          boundaries: [1518681600000, 1519317694000],
          default: -1,
          output: {
            subscriptions: {$sum: 1},
          }
        }
      }
    ])
            bonuses: {$sum: "$bonusPaid"}

[1518681600000, 1518768000000, 1518854400000, 1518940800000, 1519027200000, 1519113600000, 1519200000000, 1519286400000, 1519317694000]

db.userCardActions.aggregate([
      { $match: { action: "pay" } },
      {
        $bucket: {
          groupBy: "$at",
          boundaries: [1515744000000, 1518336000000, 1518940800000, 1519027200000, 1519080328120],
          default: -1,
          output: {
            purchases: { $sum: 1 },
            revenue: { $sum: "$payment.amount" },
            weightedRevenue: { $sum: "$payment.weightedRevenue" },
            fraud: { $sum: { $cond: { if: { $eq: ["$payment.category", "fraud"] }, then: 1, else: 0 } } },
            firstTime: { $sum: { $cond: { if: { $eq: ["$payment.category", "first"] }, then: 1, else: 0 } } },
            purchasers: { $addToSet: "$userId" },
            sellers: { $addToSet: "$authorId" }
          }
        }
      },
      {
        $project: {
          purchases: "$purchases",
          revenue: "$revenue",
          weightedRevenue: "$weightedRevenue",
          fraud: "$fraud",
          firstTime: "$firstTime",
          purchasers: { $size: "$purchasers" },
          sellers: { $size: "$sellers" }
        }
      }
    ])


db.userCardActions.aggregate([
      { $match: { action: "pay" } },
      {
        $bucket: {
          groupBy: "$at",
          boundaries: [1515744000000, 1518336000000, 1518940800000, 1519027200000, 1519080328120],
          default: -1,
          output: {
            purchases: { $sum: 1 },
            revenue: { $sum: "$payment.amount" },
            weightedRevenue: { $sum: "$payment.weightedRevenue" },
            fraud: { $sum: { $cond: { if: { $eq: ["$payment.category", "fraud"] }, then: 1, else: 0 } } },
            firstTime: { $sum: { $cond: { if: { $eq: ["$payment.category", "first"] }, then: 1, else: 0 } } },
            purchasers: { $addToSet: "$userId" },
            sellers: { $addToSet: "$authorId" }
          }
        }
      },
])

db.userCardActions.aggregate([
  {$match: {action: "pay", at: {$gt: 1519027200000}, fraudReason: {$exists: true}, authorId: "7914d0dc-0d29-4958-bc00-3352ea87f5b0"}},
  {$group: {_id: {userId: "$userId", fingerprint: "$fromFingerprint", ipAddress: "$fromIpAddress"}, count: {$sum: 1}}},
  {$sort: {"_id.fingerprint": -1}},
  {$lookup: {from: "ipAddresses", localField: "_id.ipAddress", foreignField: "ipAddress", as: "ip"}}
])

db. bankTransactions.aggregate([
      { $match: { originatorUserId: "bb7fe532-2c5f-4e8f-9ceb-29fcacad53fd", "details.type": "coupon-redemption", "details.reason": { $in: ["card-promotion", "card-open-payment", "card-click-payment"] } }},
      { $group: { _id: "all", count: { $sum: 1 }, total: { $sum: "$details.amount" } } }
    ])


db.channelUsers.aggregate([
      { $match: { subscriptionState: "subscribed" } },
      {
        $group: {
          _id: "all",
          subscribers: { $addToSet: "$userId" },
          totalSubscriptions: { $sum: 1 },
          channels: { $addToSet: "$channelId" },
          bonuses: { $sum: "$bonusPaid" }
        }
      },
          { $project: { totalSubscribers: { $size: "$subscribers" }, totalSubscriptions: "$totalSubscriptions", totalChannels: { $size: "$channels" }, bonuses: "$bonuses" } }
    ])



db.cards.aggregate([
  {$lookup: {from: "users", localField: "createdById", foreignField: "id", as: "user"}},
  {$project: {id: "$id", title: "$summary.title", authorId: "$user.id", handle: "$user.identity.handle", country: "$user.country"}},
  {$group: {
    _id: "$country",
    count: {$sum: 1}
  }},
  {$sort: {count: -1}}
])

countryCards = db.cards.aggregate([
  {$lookup: {from: "users", localField: "createdById", foreignField: "id", as: "user"}},
  {$project: {id: "$id", title: "$summary.title", authorId: "$user.id", handle: "$user.identity.handle", country: "$user.country"}},
  {$match: {country: "United States"}},
])

countryCards.forEach(function(x) {
  db.cards.update({id: x.id}, {$set: {"summary.langCode": "en"}})
})

var r = db.cards.aggregate([   {$lookup: {from: "users", localField: "createdById", foreignField: "id", as: "user"}},   {$project: {id: "$id", title: "$summary.title", authorId: "$user.id", handle: "$user.identity.handle", country: "$user.country"}},   {$match: {country: "GB"}}, ])
r.map(function(x) { db.cards.updateOne({_id: x.id}, {"$set": {"summary.langCode": "en" }}); })

var r = db.cards.aggregate([
  {$match: {"summary.langCode": {$exists: false}, state: "active", "curation.block": false}},
  {$group: {_id: "$createdById", count: {$sum: 1}}},
  {$lookup: {from: "users", localField: "_id", foreignField: "id", as: "user"}}, 
  {$unwind: "$user"},
  {$project: {handle: "$user.identity.handle", country: "$user.country", count: "$count"}},
  {$sort: {count: -1}}
])

var r = db.cards.aggregate([   
  {$lookup: {from: "users", localField: "createdById", foreignField: "id", as: "user"}},   
  {$project: {id: "$id", title: "$summary.title", authorId: "$user.id", handle: "$user.identity.handle", country: "$user.country"}},   
  {$match: {handle: {$in: ["ezequielgomes", "igalapagos", "teologia", "patymassa", "moiseslugli", "aldenio", "massola", "marcosalvez", "gutohill", "thomasblum", "croniquista", "maicondecapreo", "pedagogia", "guidutra"]}}}
])

db.cards.aggregate([
  {$match: {"summary.langCode": {$exists: false}, state: "active", "curation.block": false}},
  {$lookup: {from: "users", localField: "createdById", foreignField: "id", as: "user"}}, 
  {$unwind: "$user"},
  {$project: {_id: 0, id: "$id", handle: "$user.identity.handle", country: "$user.country", title: "$summary.title"}},
  {$sort: {handle: 1}}
])


var r = db.cards.aggregate([
  {$match: {"summary.langCode": {$exists: false}, state: "active", "curation.block": false}},
  {$project: {id: "$id", createdById: "$createdById", title: "$summary.title"}},
  {$sort: {createdById: 1}}
])

{
id: {$in: ["f88bf796-96ca-4584-bc3f-cc230ab06b32",
"1e1dc6f7-a5dc-4034-972b-0b78792c2881",
"ed961441-c21e-4ca9-979e-0a6ca3f251a2",
"98567f21-0b98-4e90-bd13-2760290b9c06",
"98ee5289-46c6-4e6f-b7e7-90e004289564"
"acd6344b-c31e-4579-a1fe-69070c6e1f6a",
"49b28937-9423-485f-8e86-f6c544a25514"]}				
}

db.cards.aggregate([
  {$match: { state: "active", "pricing.openFeeUnits": {$gt: 0}, "stats.uniqueOpens.value": {$gt: 0}}},
  {$project: {_id: 0, id: "$id", units: "$pricing.openFeeUnits", opens: "$stats.uniqueOpens.value"}},
  {$lookup: {
    from: "userCardActions", 
    localField: "id",
    foreignField: "cardId",
    as: "action"
  }},
  {$unwind: "$action"},
  {$match: {"action.action": "pay"}},
  {$group: {_id: "$id", purchases: {$sum: 1}, units: {$first: "$units"}, opens: {$first: "$opens"}}},
  {$group: {_id: "$units", opens: {$sum: "$opens"}, purchases: {$sum: "$purchases"}}},
  {$project: {_id: 0, priceLevel: "$_id", opens: 1, purchases: 1, ratio: {$divide: ["$purchases", "$opens"]}}},
  {$sort: {priceLevel: 1}}
])



  {$project: {units: "$units", opens: "$opens", purchases: {$size: "$action"}}}

  {$group: {
    _id: "$units",
    purchases: {$sum: 1},
    opens: {$sum: "$opens"},
  }}

{$lookup: {
    from: "userCardActions", 
    let: {cardId: "$id"},
    pipeline: [
      {$match: {action: "pay", $eq: ["$cardId", "$$cardId"]}},
      {$group: {_id: "all", count: {$sum: 1}}}
    ],
    as: "purchases"
  }},
  {$unwind: "$purchases"},  
  {$group: {
    _id: {level: "$pricing.openFeeUnits"}, 
    opens: { $sum: "$stats.uniqueOpens.value"},    
    purchases: {$sum: "$purchases.count"}
  }},
db.userCardActions.aggregate([
  {$match: {action: "pay", at: {$gt: 1519086911000}}},
  {$group: {_id: {purchaser: "$userId"}, count: {$sum: 1}}},
  {$group: {_id: "$count", purchasers: {$sum: 1}}},
  {$sort: {_id: 1}}
])

db.userCardActions.aggregate([
  {$match: {action: "pay", at: {$gt: 1519086911000}}},
  {$group: {_id: "$userId"}},
  {$group: {_id: "all", count: {$sum: 1}}}
])

db.users.aggregate([
  {$match: {lastContact: {$gt: 1519086911000}}},
  {$lookup: {from: "userCardActions", localField: "id", foreignField: "userId", as: "action"}},
  {$unwind: "$action"},
  {$match: {"action.action": "pay"}},
  {$group: {_id: "$id", purchases: {$sum: 1}}},
  {$group: {_id: "$purchases", users: {$sum: 1}}},
  {$sort: {_id: 1}},
])

Which are the best publishers for us?  (The ones with lots of repeat customers)

db.users.aggregate([
  {$match: {lastContact: {$gt: 1519086911000}, lastPosted: {$gt: 0}}},
  {$lookup: {from: "userCardActions", localField: "id", foreignField: "authorId", as: "action"}},
  {$unwind: "$action"},
  {$match: {"action.action": "pay", "action.at": {$gt: 1519086911000}, fraudReason: {$exists: false}}},
  {$group: {_id: {author: "$id", handle: "$identity.handle", buyer: "$action.userId"}, purchases: {$sum: 1}, revenue: {$sum: "$action.payment.amount"}}},
  {$match: {purchases: {$gt: 1}}},
  {$group: {_id: {author: "$_id.author", handle: "$_id.handle"}, buyers: {$sum: 1}, revenue: {$sum: "$revenue"}}},
  {$sort: {buyers: -1}},
])

db.userCardActions.aggregate([
  {$match: {authorId: "ff898aa7-51db-40d0-9fca-067ab718e763", action: "pay", at: {$gt: 1517877311000}}},
  {$group: {_id: "$userId", purchases: {$sum: 1}, revenue: {$sum: "$payment.amount"}}},
  {$lookup: {from: "users", localField: "_id", foreignField: "id", as: "user"}}, 
  {$unwind: "$user"},
  {$project: {_id: 0, userId: "$_id", purchases: 1, revenue: 1, handle: "$user.identity.handle", country: "$user.country", city: "$user.city", landing: "$user.originalLandingPage", referrer: "$user.originalReferrer", balance: "$user.balance"}},
  {$sort: {purchases: -1}}
])

db.userCardActions.aggregate([
  {$match: {action: "pay", at: {$gt: 1519173311000}}},
  {$group: {_id: "$userId", purchases: {$sum: 1}}},
  {$match: {purchases: {$gt: 1}}},
  {$group: {_id: "all", count: {$sum: 1}}}
])

How many successful publishers and what was their cumulative revenue as of a specific point in time?

db.users.aggregate([
  {$match: {lastPosted: {$gt: 0}, added: {$lt: 1519953731000}, "curation": {$exists: false}}},
  {$project: {
    _id: 0,
    id: 1,
    handle: "$identity.handle",
    country: "$country"
  }},
  {$lookup: {from: "userCardActions", localField: "id", foreignField: "authorId", as: "action"}},
  {$unwind: "$action"},
  {$match: {"action.action": "pay", "action.at": {$lt: 1519953731000}, "action.fraudReason": {$exists: false}}},
  {$project: {
    id: 1,
    handle: 1,
    country: 1,
    buyer: "$action.userId",
    amount: "$action.payment.amount",
    category: "$action.payment.category"
  }},
  {$group: {
    _id: {id: "$id", handle: "$handle", country: "$country", buyer: "$buyer"},
    revenueFromBuyer: {$sum: "$amount"},
    categories: {$addToSet: "$category"}
  }},
  {$project: {
    revenueFromBuyer: 1,
    category: {$cond: {
      if: {$in: ["fan", "$categories"]}, 
      then: "fan", 
      else: {
        $cond: {
          if: {$in: ["normal", "$categories"]},
          then: "normal",
          else: "firstTime"
        }
      }
    }}
  }},
  {$group: {
    _id: {id: "$_id.id", handle: "$_id.handle", country: "$_id.country"},
    revenue: {$sum: "$revenueFromBuyer"},
    buyers: {$sum: 1},
    fans: {$sum: {$cond: {if: {$eq: ["$category", "fan"]}, then: 1, else: 0}}},
    normals: {$sum: {$cond: {if: {$eq: ["$category", "normal"]}, then: 1, else: 0}}},
    firstTimes: {$sum: {$cond: {if: {$eq: ["$category", "firstTime"]}, then: 1, else: 0}}},
  }},
  {$match: {fans: {$gt: 3}, revenue: {$gt: 5}}},
  {$group: {
    _id: "all",
    publishers: {$sum: 1},
    revenue: {$sum: "$revenue"}
  }},
])



db.userCardActions.aggregate([
      { $match: { action: "pay" } },
      {
        $bucket: {
          groupBy: "$at",
          boundaries: [1513125311000, 1513730111000, 1514334911000, 1514939711000, 1515544511000, 1516149311000, 1516754111000, 1517358911000, 1517963711000, 1518568511000,1519173311000, 1519778111000],
          default: -1,
          output: {
            purchases: { $sum: 1 },
            revenue: { $sum: "$payment.amount" },
            weightedRevenue: { $sum: "$payment.weightedRevenue" },
            fraud: { $sum: { $cond: { if: { $eq: ["$payment.category", "fraud"] }, then: 1, else: 0 } } },
            firstTime: { $sum: { $cond: { if: { $eq: ["$payment.category", "first"] }, then: 1, else: 0 } } },
            purchasers: { $addToSet: "$userId" },
            sellers: { $addToSet: "$authorId" }
          }
        }
      },
      {
        $project: {
          purchases: "$purchases",
          revenue: "$revenue",
          weightedRevenue: "$weightedRevenue",
          fraud: "$fraud",
          firstTime: "$firstTime",
          purchasers: { $size: "$purchasers" },
          sellers: { $size: "$sellers" }
        }
      }
    ])

What is happening with ads?

db.adSlots.aggregate([
  {$match: {status: {$ne: "pending"}, created: {$gt: 1519259711000}, authorId: {$in: ["bb7fe532-2c5f-4e8f-9ceb-29fcacad53fd", "81b62690-81e0-4561-9eba-1b0c84dcc9ab"]}}},
  {$group: {_id: {type: "$type", status: "$status", redeemed: "$redeemed"}, count: {$sum: 1}}},
  {$sort: {"_id.type": 1, "_id.redeemed": 1, "_id.status": 1}}
])

db.adSlots.aggregate([
  {$match: {type: "open-payment", redeemed: false, created: {$gt: 1518654911000}}},
  {$bucket: {
    groupBy: "$userBalance",
    boundaries: [0, 0.1, 0.25, 0.50, 0.75, 1, 1.5, 2, 2.25, 2.5, 2.75, 3, 3.5, 4, 4.5, 5],
    default: -1,
    output: {
      total: { $sum: 1 },
    }
  }},
])

By week, how many cards were published, by how many publishers?

db.cards.aggregate([
  {$match: {state: "active"}},
  {$lookup: {from: "users", localField: "createdById", foreignField: "id", as: "publisher"}},
  {$unwind: "$publisher"},
  {$project: {  
    postedAt: "$postedAt",  
    revenue: "$stats.revenue.value",
    publisherId: "$publisher.id",
    publisherHandle: "$publisher.identity.handle",
    country: "$publisher.country"
  }},
  {$bucket: {
      groupBy: "$postedAt",
      boundaries: [1513125311000, 1513730111000, 1514334911000, 1514939711000, 1515544511000, 1516149311000, 1516754111000, 1517358911000, 1517963711000, 1518568511000,1519173311000, 1519778111000, 1520382911000],
      default: -1,
      output: {
        cards: {$sum: 1},
        publishers: { $addToSet: "$publisherId" },
        countries: {$addToSet: "$country"},
        revenue: {$sum: "$revenue"}
      }
  }},
  {$project: {
    cards: 1, 
    publishers: {$size: "$publishers"}, 
    revenue: "$revenue", 
    countries: {$size: "$countries"},
    cardsPerPublisher: {$divide: ["$cards", {$size: "$publishers"}]}
  }}
])

By week, tell me about consumers

db.userCardActions.aggregate([
  {$match: {action: "pay", fraudReason: {$exists: false}}},
  {$lookup: {from: "users", localField: "userId", foreignField: "id", as: "consumer"}},
  {$unwind: "$consumer"},
  {$project: {  
    postedAt: "$at",  
    cardId: "$cardId",
    expenses: "$payment.amount",
    consumerId: "$consumer.id",
    country: "$consumer.country"
  }},
  {$bucket: {
      groupBy: "$postedAt",
      boundaries: [1513125311000, 1513730111000, 1514334911000, 1514939711000, 1515544511000, 1516149311000, 1516754111000, 1517358911000, 1517963711000, 1518568511000,1519173311000, 1519778111000, 1520382911000],
      default: -1,
      output: {
        purchases: {$sum: 1},
        cards: {$addToSet: "$cardId"},
        consumers: { $addToSet: "$consumerId" },
        countries: {$addToSet: "$country"},
        expenses: {$sum: "$expenses"},
      }
  }},
  {$project: {
    purchases: 1, cards: {$size: "$cards"}, consumers: {$size: "$consumers"}, expenses: "$expenses", countries: {$size: "$countries"}
  }}
])

By week, tell me about advertisers, including content promotion

db.adSlots.aggregate([
  {$match: {status: {$ne: "pending"}}},
  {$lookup: {from: "users", localField: "authorId", foreignField: "id", as: "advertiser"}},
  {$unwind: "$advertiser"},
  {$project: {  
    created: "$created",  
    cardId: "$cardId",    
    advertiserId: "$advertiser.id",
    country: "$advertiser.country",
    redeemed: "$redeemed",
    expense: { $cond: { if: "$redeemed", then: "$amount", else: 0 } },
  }},
  {$bucket: {
      groupBy: "$created",
      boundaries: [1513125311000, 1513730111000, 1514334911000, 1514939711000, 1515544511000, 1516149311000, 1516754111000, 1517358911000, 1517963711000, 1518568511000,1519173311000, 1519778111000, 1520382911000],
      default: -1,
      output: {
        adslots: {$sum: 1},
        redemptions: {$sum: { $cond: { if: "$redeemed" , then: 1, else: 0 } }},
        advertisers: { $addToSet: "$advertiserId" },
        cards: {$addToSet: "$cardId"},
        countries: {$addToSet: "$country"},
        expenses: {$sum: "$expense"},
      }
  }},
  {$project: {
    adslots: 1, redemptions: 1, advertisers: {$size: "$advertisers"}, cards: {$size: "$cards"}, expenses: 1, countries: {$size: "$countries"}
  }}  
])

Now, only pure advertisements

db.adSlots.aggregate([
  {$match: {status: {$ne: "pending"}, type: {$in: ["impression-ad", "open-payment"]}}},
  {$lookup: {from: "users", localField: "authorId", foreignField: "id", as: "advertiser"}},
  {$unwind: "$advertiser"},
  {$project: {  
    created: "$created",  
    cardId: "$cardId",  
    type: "$type",  
    advertiserId: "$advertiser.id",
    country: "$advertiser.country",
    redeemed: "$redeemed",
    expense: { $cond: { if: "$redeemed", then: "$amount", else: 0 } },
  }},
  {$bucket: {
      groupBy: "$created",
      boundaries: [1513125311000, 1513730111000, 1514334911000, 1514939711000, 1515544511000, 1516149311000, 1516754111000, 1517358911000, 1517963711000, 1518568511000,1519173311000, 1519778111000, 1520382911000],
      default: -1,
      output: {
        adslots: {$sum: 1},
        payImpressions: {$sum: { $cond: { if: {$eq: ["$type", "impression-ad"]} , then: 1, else: 0 } }},
        payToOpens: {$sum: { $cond: { if: {$eq: ["$type", "open-payment"]} , then: 1, else: 0 } }},
        openRedemptions: {$sum: { $cond: { if: {$and: ["$redeemed", {$eq: ["$type", "open-payment"]}]} , then: 1, else: 0 } }},
        advertisers: { $addToSet: "$advertiserId" },
        cards: {$addToSet: "$cardId"},
        countries: {$addToSet: "$country"},
        expenses: {$sum: "$expense"},
      }
  }},
  {$project: {
    adslots: 1, payImpressions: 1, payToOpens: 1, openRedemptions: 1, advertisers: {$size: "$advertisers"}, cards: {$size: "$cards"}, expenses: 1, countries: {$size: "$countries"}
  }}  
])

Now, tell me about advertisement consumers

db.adSlots.aggregate([
  {$match: {status: {$ne: "pending"}}},
  {$lookup: {from: "users", localField: "userId", foreignField: "id", as: "consumer"}},
  {$unwind: "$consumer"},
  {$project: {  
    created: "$created",  
    cardId: "$cardId",    
    consumerId: "$consumer.id",
    country: "$consumer.country",
    redeemed: "$redeemed",
    revenue: { $cond: { if: "$redeemed", then: "$amount", else: 0 } },
  }},
  {$bucket: {
      groupBy: "$created",
      boundaries: [1513125311000, 1513730111000, 1514334911000, 1514939711000, 1515544511000, 1516149311000, 1516754111000, 1517358911000, 1517963711000, 1518568511000,1519173311000, 1519778111000, 1520382911000],
      default: -1,
      output: {
        adslots: {$sum: 1},
        redemptions: {$sum: { $cond: { if: "$redeemed" , then: 1, else: 0 } }},
        consumers: { $addToSet: "$consumerId" },
        cards: {$addToSet: "$cardId"},
        countries: {$addToSet: "$country"},
        revenue: {$sum: "$revenue"},
      }
  }},
  {$project: {
    adslots: 1, redemptions: 1, consumers: {$size: "$consumers"}, cards: {$size: "$cards"}, revenue: 1, countries: {$size: "$countries"}
  }}  
])





What is the fraud from a given publisher?

db.userCardActions.aggregate([
  {$match: {
    authorId: "75013838-fc15-45f2-ac71-a34f3ebe46a4",
    cardId: "7dd03b1d-7388-4cd7-b7bf-593f9a1d5a4a",
    action: "pay",
    fraudReason: {$exists: true}
  }},
  {$lookup: {
    from: "users",
    localField: "userId",
    foreignField: "id",
    as: "user"
  }},
  {$unwind: "$user"},
  {$project: {
    buyerId: "$user.id",
    city: "$user.city",
    country: "$user.country",
    originalReferrer: "$user.originalReferrer"
  }},
  {$group: {
    _id: "$originalReferrer",
    count: {$sum: 1}
  }},
  {$sort: {count: -1}}
])

db.userCardActions.aggregate([
  {$match: {
    authorId: "75013838-fc15-45f2-ac71-a34f3ebe46a4",
    cardId: "7dd03b1d-7388-4cd7-b7bf-593f9a1d5a4a",
    action: "pay",
    fraudReason: {$exists: true}
  }},
  {$lookup: {
    from: "userRegistrations",
    localField: "userId",
    foreignField: "userId",
    as: "registration"
  }},
  {$unwind: "$registration"},
  {$project: {
    buyerId: "$userId",
    agent: "$registration.userAgent",
  }},
  {$group: {
    _id: "$agent",
    count: {$sum: 1}
  }},
  {$sort: {count: -1}}
])

  {$group: {
    _id: "$agent",
    count: {$sum: 1}
  }},
  {$sort: {count: -1}}

How many users have purchased at least one card?

db.userCardActions.aggregate([
  {$match: {
    action: "pay",
    fraudReason: {$exists: false}    
  }},
  {$group: {
    _id: "$userId",
    count: {$sum: 1},
    revenue: {$sum: "$payment.amount"}
  }},
  {$group: {
    _id: "all",
    count: {$sum: 1},
    revenue: {$sum: "$revenue"}
  }}
])

db.channelCards.aggregate([
  {$match: {
    pinned: true
  }},
  {$group: {
    _id: "$channelId",
    count: {$sum: 1}
  }},
  {$lookup: {
    from: "channels",
    localField: "_id",
    foreignField: "id",
    as: "channel"
  }},
  {$unwind: "$channel"},
  {$project: {
    count: 1,
    handle: "$channel.handle"
  }},
  {$sort: {
    count: -1
  }}
])

db.adSlots.aggregate([
  {$match: {
    redeemed: true,
    type: {$in: ["open-payment", "click-payment"]}
  }},
  {$group: {
    _id: "$userId",
    count: {$sum: 1},
    revenue: {$sum: "$amount"}
  }},
  {$lookup: {
    from: "users",
    localField: "_id",
    foreignField: "id",
    as: "user"
  }},
  {$project: {
    count: 1, 
    revenue: 1,
    handle: "$user.identity.handle",
    balance: "$user.balance"
  }},
  {$sort: {count: -1}}
])

db.adSlots.aggregate([
  {$match: {
    redeemed: true,
    type: {$in: ["open-payment", "click-payment"]}
  }},
  {$bucket: {
    groupBy: "$userBalance",
    boundaries: [0, 0.1, 0.25, 0.50, 0.75, 1, 1.5, 2, 2.25, 2.5, 2.75, 3, 3.5, 4, 4.5, 5, 6, 8, 10, 15, 25, 100],
    default: -1,
    output: {
      total: { $sum: 1 },
    }
  }},
])

db.users.aggregate([
  {$match: {
    type: "normal",
    lastContact: {$gt: 1518830524000}
  }},
  {$bucket: {
    groupBy: "$balance",
    boundaries: [-100, 0, 0.1, 0.25, 0.50, 0.75, 1, 1.5, 2, 2.25, 2.5, 2.75, 3, 3.5, 4, 4.5, 5, 6, 8, 10, 15, 25, 100, 1000],
    default: -999,
    output: {
      total: { $sum: 1 },
    }
  }},
])

db.users.aggregate([
  {$match: {
    type: "normal",
    lastContact: {$gt: 1518830524000}
  }},
  {$bucket: {
    groupBy: "$added",
    boundaries: [1513125311000, 1513730111000, 1514334911000, 1514939711000, 1515544511000, 1516149311000, 1516754111000, 1517358911000, 1517963711000, 1518568511000,1519173311000, 1519778111000, 1520382911000],
    default: -1,
    output: {
      total: { $sum: 1 },
    }
  }},
])

What much advertising revenue is available to users?

db.cards.aggregate([
  {$match: {
    "pricing.openPayment": {$gt: 0},
	  "budget.available": true,
    private: false,
    state: "active",
  }},
  {$group: {
    _id: {createdById: "$createdById", handle: "$by.handle", amount: "$pricing.openPayment"},
    count: {$sum: 1},
    potential: {$sum: "$pricing.openPayment"},
    budget: {$sum: "$budget.amount"},
    spent: {$sum: "$budget.spent"}
  }},
  {$lookup: {
    from: "users",
    localField: "_id.createdById",
    foreignField: "id",
    as: "user"
  }},
  {$unwind: "$user"},
  {$project: {
    count: 1, 
    potential: 1,
    budget: 1,
    spent: 1,
    balance: "$user.balance"
  }},
  {$sort: {count: -1}},
])

  {$group: {
    _id: "all",
    advertisers: {$sum: 1},
    potential: {$sum: "$potential"}
  }}

Who has spent the most on content?

db.userCardActions.aggregate([
  {$match: {
    action: "pay"    
  }},
  {$group: {
    _id: "$userId",
    count: {$sum: 1},
    spent: {$sum: "$payment.amount"}
  }},
  {$lookup: {
    from: "users",
    localField: "_id",
    foreignField: "id",
    as: "user"
  }},
  {$unwind: "$user"},
  {$project: {
    count: 1, 
    spent: 1,
    handle: "$user.identity.handle",
    balance: "$user.balance"
  }},
  {$sort: {spent: -1}}
])

db.userCardActions.aggregate([
  {$match: {
    action: "pay",
    at: {$gt: 1518916924000},
    fraudReason: {$exists: false}
  }},
  {$group: {
    _id: {buyer: "$userId", seller: "$authorId"},
    count: {$sum: 1},
    spent: {$sum: "$payment.amount"}
  }},
  {$lookup: {
    from: "users",
    localField: "_id.buyer",
    foreignField: "id",
    as: "buyer"
  }},
  {$unwind: "$buyer"},
  {$project: {
    count: 1,
    buyerHandle: "$buyer.identity.handle",
    buyerLastPosted: "$buyer.lastPosted",
    buyerBalance: "$buyer.balance",
    buyerSpent: {$sum: "$spent"}
  }},
  {$lookup: {
    from: "users",
    localField: "_id.seller",
    foreignField: "id",
    as: "seller"
  }},
  {$unwind: "$seller"},
  {$project: {
    count: 1,
    buyerHandle: 1,
    buyerLastPosted: 1,
    buyerBalance: 1,
    buyerSpent: 1,
    sellerHandle: "$seller.identity.handle"
  }},
  {$match: {
    buyerLastPosted: 0
  }},
  {$group: {
    _id: {userId: "$_id.buyer", handle: "$buyerHandle", balance: "$buyerBalance", spent: {$sum: "$buyerSpent"}},
    sellerCount: {$sum: 1},
    cardCount: {$sum: "$count"},
    sellers: {$addToSet: "$sellerHandle"}
  }},
  {$sort: {cardCount: -1}}
])


db.userCardActions.aggregate([
  {$match: {action: "pay", authorId: "75013838-fc15-45f2-ac71-a34f3ebe46a4"}},
  {$group: {
    _id: "$userId",
    count: {$sum: 1},
    revenue: {$sum: "$payment.amount"}
  }},
  {$lookup: {
    from: "users",
    localField: "_id",
    foreignField: "id",
    as: "buyer"
  }},
  {$unwind: "$buyer"},
  {$project: {
    count: 1,
    revenue: 1,
    city: "$buyer.city",
    country: "$buyer.country",
    buyerHandle: "$buyer.identity.handle",
    buyerBalance: "$buyer.balance",    
  }},
  {$sort: {count: -1}}
])

db.userCardActions.aggregate([
  {$match: {
    authorId: "75013838-fc15-45f2-ac71-a34f3ebe46a4",
    at: {$gt: 1520126524000},
    action: "pay",
  }},
  {$lookup: {
    from: "userRegistrations",
    localField: "userId",
    foreignField: "userId",
    as: "registration"
  }},
  {$unwind: "$registration"},
  {$project: {
    buyerId: "$userId",
    agent: "$registration.userAgent",
  }},
  {$group: {
    _id: "$agent",
    count: {$sum: 1}
  }},
  {$sort: {count: -1}}
])

db.userCardActions.aggregate([
  {$match: {
    authorId: "75013838-fc15-45f2-ac71-a34f3ebe46a4",
    cardId: "7dd03b1d-7388-4cd7-b7bf-593f9a1d5a4a",
    action: "pay",
  }},
  {$lookup: {
    from: "users",
    localField: "userId",
    foreignField: "id",
    as: "user"
  }},
  {$unwind: "$user"},
  {$project: {
    buyerId: "$user.id",
    city: "$user.city",
    country: "$user.country",
    originalReferrer: "$user.originalReferrer"
  }},
  {$group: {
    _id: "$originalReferrer",
    count: {$sum: 1}
  }},
  {$sort: {count: -1}}
])

db.userCardActions.aggregate([
  {$match: {action: "pay", authorId: "75013838-fc15-45f2-ac71-a34f3ebe46a4"}},
  {$group: {
    _id: "$userId",
    count: {$sum: 1},
    revenue: {$sum: "$payment.amount"},
    timestamps: {$push: "$at"}
  }},
  {$lookup: {
    from: "users",
    localField: "_id",
    foreignField: "id",
    as: "buyer"
  }},
  {$unwind: "$buyer"},
  {$match: {count: {$gt: 1}}},
  {$project: {
    count: 1,
    revenue: 1,
    city: "$buyer.city",
    country: "$buyer.country",
    buyerHandle: "$buyer.identity.handle",
    buyerBalance: "$buyer.balance", 
    delta: {$subtract: [{$arrayElemAt: ["$timestamps", 0]}, {$arrayElemAt: ["$timestamps", 1]}]}   
  }},
  {$sort: {delta: -1}}
])


db.users.aggregate([
  {$match: {
    added: {$gt: 1517938744000, $lt: 1519839544000},
    originalReferrer: /t\.co/i
  }},
  {$lookup: {
    from: "userCardActions",
    localField: "id",
    foreignField: "userId",
    as: "purchase"
  }},
  {$unwind: "$purchase"},
  {$project: {
    id: "$id",
    handle: "$identity.handle",
    action: "$purchase.action"
  }},
  {$match: {
    action: "pay"
  }},
  {$group: {
    _id: {id: "$id", handle: "$handle"},
    purchases: {$sum: 1}
  }},
  {$project: {
    purchases: {$cond: {
      if: {$gt: ["$purchases", 1]},
      then: 2,
      else: {$cond: {
        if: {$gt: ["$purchases", 0]},
        then: 1,
        else: 0
      }}
    }},
    identity: {$cond: {
      if: {$gt: ["$_id.handle", null]},
      then: 1,
      else: 0
    }}
  }},
  {$group: {
    _id: {purchases: "$purchases", identity: "$identity"},
    count: {$sum: 1}
  }},
  {$sort: {count: -1}}
])

// Describe all purchasers for some author since date X

db.userCardActions.aggregate([
  {$match: {
    authorId: "42b964db-55f4-4a14-b1ec-0d28907524ea", 
    action: "pay",
    at: {$gt: 1522047600000}
  }},
  {$group: {
    _id: "$userId",
    count: {$sum: 1},
    revenue: {$sum: "$payment.amount"},
    cards: {$addToSet: "$cardId"}    
  }},
  {$lookup: {
    from: "users",
    localField: "_id",
    foreignField: "id",
    as: "buyer"
  }},
  {$unwind: "$buyer"},
  {$lookup: {from: "userRegistrations", localField: "_id", foreignField: "userId", as: "registration"}},
  {$unwind: "$registration"},
  {$match: {
    "registration.at": {$gt: 1522047600000}
  }},
  {$group: {
    _id: {userId: "$buyer.id", handle: "$buyer.identity.handle", city: "$buyer.city", country: "$buyer.country", referrer: "$buyer.originalReferrer", landingPage: "$buyer.originalLandingPage", balance: "$buyer.balance", purchases: "$count", revenue: "$revenue", email: "$buyer.identity.emailAddress", confirmed: "$buyer.identity.emailConfirmed", cards: "$cards"},
    registrations: {$sum: 1},
    fingerprints: {$addToSet: "$registration.fingerprint"},
    ipAddresses: {$addToSet: "$registration.ipAddress"},
    userAgents: {$addToSet: "$registration.userAgent"},
  }},
  {$sort: {"_id.revenue": -1}},
]).pretty()

    at: {$push: "$registration.at"}

db.bankTransactions.aggregate([
  {$match: {"details.reason": "referral-bonus"}},
  {$group: {
    _id: "$participantUserIds",
    count: {$sum: 1},
    description: {$push: "$description"}
  }},  
  {$lookup: {
    from: "users",
    localField: "_id",
    foreignField: "id",
    as: "user"
  }},
  {$unwind: "$user"},
  {$project: {
    count: 1,
    description: 1,
    city: "$user.city",
    country: "$user.country",
    handle: "$user.identity.handle",
    balance: "$user.balance"
  }},
  {$sort: {count: -1}}
])


db.channelUsers.aggregate([
  {$match: {channelId: "441b36c4-e573-45ec-b26e-9dd05cefb645", subscriptionState: "subscribed"}},
  {$lookup: {
    from: "users",
    localField: "userId",
    foreignField: "id",
    as: "user"
  }},
  {$unwind: "$user"},
  {$project: {
    userId: "$user.id",
    handle: "$user.identity.handle",
    email: "$user.identity.emailAddress",
    balance: "$user.balance",
    city: "$user.city",
    country: "$user.country",
  }},
  {$lookup: {
    from: "userRegistrations",
    localField: "userId",
    foreignField: "userId",
    as: "registration"
  }},
  {$unwind: "$registration"},
  {$group: {
    _id: {userId: "$userId", handle: "$handle", city: "$city", email: "$email", balance: "$balance"},
    registrations: {$sum: 1},
    fingerprints: {$addToSet: "$registration.fingerprint"},
    userAgents: {$addToSet: "$registration.userAgent"}
  }},
])

db.userCardActions.aggregate([
  {$match: {action: "pay", at: {$gt: 1520382940000}}},
  {$group: {
    _id: "all",
    count: {$sum: 1},
    revenue: {$sum: "$payment.amount"}
  }}
])

db.userRegistrations.aggregate([
  {$match: {userAgent: "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.119 Safari/537.36"}},
  {$group: {
    _id: {fingerprint: "$fingerprint"},
    users: {$addToSet: "$userId"},
    count: {$sum: 1}
  }},
  {$project: {
    users: {$size: "$users"},
    count: 1
  }}
])

db.userRegistrations.aggregate([
  {$match: {fingerprint: "7603d4734332993f33d52107ceb88325"}},
  {$group: {
    _id: "$userId",
    count: {$sum: 1}
  }},
])

db.userRegistrations.aggregate([
  {$match: {fingerprint: "5f4421c8e08cae981507998b5a0a80ae"}},
  {$group: {
    _id: {userId: "$userId", ipAddress: "$ipAddress"},
    count: {$sum: 1}
  }},
  {$lookup: {
    from: "ipAddresses",
    localField: "_id.ipAddress",
    foreignField: "ipAddress",
    as: "ipInfo"
  }},
  {$unwind: "$ipInfo"}
])

"fingerprint": "8f5486c5336612641818dd4ae811e9f8"

initialBalance: 0,
"originalLandingPage": {$ne: "https://channels.cc/c/57670ce8-c8d9-450d-a632-93d9d95ed5c4"}

userId: "d2f5f098-377b-4a32-9c1f-f13e046a627f"	

userId: "683152f6-b1d7-43f8-8772-6365b33f9a8a"

// Analyze those who were given an initial balance of zero (excluding automated traffic going to Allen James's card):

db.users.aggregate([
  {$match: {
    initialBalance: 0,
    "originalLandingPage": {$ne: "https://channels.cc/c/57670ce8-c8d9-450d-a632-93d9d95ed5c4"}
  }},
  {$lookup: {
    from: "userRegistrations",
    localField: "id",
    foreignField: "userId",
    as: "registration"
  }},
  {$unwind: "$registration"},
  {$project: {
    userId: "$registration.userId",
    fingerprint: "$registration.fingerprint",
    ipAddress: "$registration.ipAddress",
    userAgent: "$registration.userAgent",
  }},
  {$lookup: {
    from: "userRegistrations",
    localField: "fingerprint",
    foreignField: "fingerprint",
    as: "registrationF"    
  }},
  {$unwind: "$registrationF"},
  {$project: {
    userId: 1,
    fingerprint: 1,
    ipAddress: 1,
    userAgent: 1,
    userIdF: "$registrationF.userId",
    ipAddressF: "$registrationF.ipAddress",
    userAgentF: "$registrationF.userAgent",
    atF: "$registrationF.at",
  }},
  {$group: {
    _id: "$fingerprint",
    userIdsF: {$addToSet: "$userIdF"},
    ipAddressesF: {$addToSet: "$ipAddressF"},
    userAgentsF: {$addToSet: "$userAgentF"},
    atsF: {$push: "$atF"},
  }},
  {$lookup: {
    from: "users",
    localField: "userIdsF",
    foreignField: "id",
    as: "userF"
  }},
  {$unwind: "$userF"},
  {$project: {
    ipAddressesF: 1,
    userAgentsF: 1,
    atsF: 1,
    userId: "$userF.id",
    handle: "$userF.identity.handle",
    balance: "$userF.balance",
    city: "$userF.city",
    country: "$userF.country",
    referrer: "$userF.originalReferrer",
    landingPage: "$userF.originalLandingPage"
  }},
  {$group: {
    _id: "$_id",
    ipAddressesF: {$addToSet: "$ipAddressesF"},
    userAgentsF: {$addToSet: "$userAgentsF"},
    userIds: {$addToSet: "$userId"},
    handles: {$addToSet: "$handle"},
    balances: {$push: "$balance"},
    cities: {$addToSet: "$city"},
    countries: {$addToSet: "$country"},
    referrers: {$addToSet: "$referrer"},
    landingPages: {$addToSet: "$landingPage"}
  }},
  {$project: {
    ipAddresses: {$size: "$ipAddressesF"},
    userAgentsF: 1,
    userIds: 1,
    handles: 1,
    handleCount: {$size: "$handles"},
    balances: 1,
    cities: 1,
    countries: 1,
    referrers: 1,
    landingPages: 1
  }},
  {$sort: {handleCount: -1}}
]).pretty()

    at: {$addToSet: "$atsF"},

db.adSlots.aggregate([
  {$match: {
    status: {$ne: "pending"},
    created: {$gt: 1521235672000},
    type: {$in: ["open-payment", "click-payment"]},
    redeemed: true
  }},
  {$group: {
    _id: {user: "$userId"},
    count: {$sum: 1},
    revenue: {$sum: "$amount"},
    balance: {$push: "$userBalance"}
  }},
  {$lookup: {
    from: "users",
    localField: "_id.user",
    foreignField: "id",
    as: "user"
  }},
  {$unwind: "$user"},
  {$project: {
    count: 1,
    revenue: 1,
    balance: 1,
    handle: "$user.identity.handle",
    city: "$user.city",
    country: "$user.country"
  }},
  {$sort: {count: -1}}
])

db.userCardActions.aggregate([
  {$match: {
    fromFingerprint: "a0ea47f08cad972616c500cee07368d8",
    action: "pay",
    at: {$gt: 1520869372000},
    fraudReason: {$exists: false}
  }},
  {$group: {
    _id: {author: "$authorId", card: "$cardId"},
    revenue: {$sum: "$payment.amount"},
  }},
  {$lookup: {
    from: "users",
    localField: "_id.author",
    foreignField: "id",
    as: "author"
  }},
  {$unwind: "$author"},
  {$project: {
    revenue: 1,
    handle: "$author.identity.handle",    
  }},
  {$sort: {revenue: -1}}
])

db.manualWithdrawals.aggregate([
  {$group: {
    _id: {user: "$userId", state: "$state"},
    count: {$sum: 1},
    withdrawn: {$sum: "$amount"}
  }},
  {$group: {
    _id: "$_id.state",
    users: {$sum: 1},
    withdrawn: {$sum: "$withdrawn"}
  }},
  {$sort: {withdrawn: -1}}
])

db.manualWithdrawals.aggregate([
  {$match: {state: "paid"}},
  {$group: {
    _id: {user: "$userId"},
    count: {$sum: 1},
    withdrawn: {$sum: "$amount"}
  }},
  {$sort: {withdrawn: -1}}
])

db.userCardActions.aggregate([
  {$match: {
    action: {$in: ["redeem-open-payment", "redeem-click-payment"]}
  }},
  {$group: {
    _id: "$userId",
    count: {$sum: 1},
    total: {$sum: "$redeemOpen.amount"}
  }},
  {$lookup: {
    from: "users",
    localField: "_id",
    foreignField: "id",
    as: "user"
  }},
  {$unwind: "$user"},
  {$project: {
    count: 1,
    total: 1,
    handle: "$user.identity.handle",
    balance: "$user.balance",
    city: "$user.city",
    country: "$user.country",
    referrer: "$user.originalReferrer",
    landingPage: "$user.originalLandingPage",
    lastContact: "$user.lastContact"
  }},
  {$match: {
    lastContact: {$gt: 1520440972000}
  }},
  {$sort: {balance: 1}}
]).pretty()


db.userCardActions.aggregate([
  {$match: {action: "pay", at: {$gt: 1522165740000}}},
  {$group: {
    _id: "$authorId",
    purchases: {$sum: 1},
    revenue: {$sum: "$payment.amount"},
    buyers: {$addToSet: "$userId"},
    cards: {$addToSet: "$cardId"},
  }},
  {$lookup: {
    from: "users",
    localField: "_id",
    foreignField: "id",
    as: "user"
  }},
  {$unwind: "$user"},
  {$project: {
    purchases: 1,
    revenue: 1,
    cards: {$size: "$cards"},
    buyers: {$size: "$buyers"},
    handle: "$user.identity.handle",
    balance: "$user.balance",
    city: "$user.city",
    country: "$user.country",
    referrer: "$user.originalReferrer",
    landingPage: "$user.originalLandingPage",    
  }},
  {$sort: {revenue: -1}}
]).pretty()

db.userCardActions.aggregate([
  {$match: {
    authorId: "9eab044d-a163-44ac-901b-c768a101516c", 
    action: "pay",
    at: {$gt: 1522165740000}
  }},
  {$group: {
    _id: "$cardId",
    count: {$sum: 1},
    revenue: {$sum: "$payment.amount"},
    buyers: {$addToSet: "$userId"}
  }},
  {$lookup: {
    from: "cards",
    localField: "_id",
    foreignField: "id",
    as: "card"
  }},
  {$unwind: "$card"},
  {$project: {
    count: 1,
    revenue: 1,
    buyers: {$size: "$buyers"},
    title: "$card.summary.title",
    price: "$card.pricing.openFeeUnits"
  }},
  {$sort: {"revenue": -1}},
]).pretty()

db.cards.aggregate([
  {$match: {
    "pricing.openFeeUnits": 0,
    "budget.available": true,
    state: "active"
  }},
  {$group: {
    _id: "$createdById",
    cards: {$sum: 1},
    payment: {$sum: "$pricing.openPayment"},
  }},
  {$lookup: {
    from: "users",
    localField: "_id",
    foreignField: "id",
    as: "user"
  }},
  {$unwind: "$user"},
  {$match: {"user.curation": {$exists: false}}},
  {$project: {
    cards: 1,
    payment: 1,
    handle: "$user.identity.handle",
    balance: "$user.balance",
    city: "$user.city",
    country: "$user.country",
    curation: "$user.curation",
  }},
  {$sort: {
    payment: -1
  }},
  {$group: {
    _id: "all",
    count: {$sum: 1},
    cards: {$sum: "$cards"},
    total: {$sum: "$payment"}
  }}
]).pretty()

db.userCardActions.aggregate([
  {$match: {
    action: {$in: ["redeem-open-payment", "redeem-click-payment"]}
  }},
  {$group: {
    _id: "$userId",
    count: {$sum: 1},
    redeemed: {$sum: "$redeemOpen.amount"}
  }},
  {$lookup: {
    from: "users",
    localField: "_id",
    foreignField: "id",
    as: "user"
  }},
  {$unwind: "$user"},
  {$project: {
    count: 1,
    redeemed: 1,
    handle: "$user.identity.handle",
    balance: "$user.balance",
    city: "$user.city",
    country: "$user.country",
    curation: "$user.curation",
  }},
  {$sort: {
    redeemed: -1
  }},  
])

db.cards.aggregate([
  {$match: {
    "pricing.openFeeUnits": {$gt: 0},
    "pricing.promotionFee": {$gt: 0},
    "budget.available": true,
    state: "active"
  }},
  {$group: {
    _id: "$createdById",
    cards: {$sum: 1},
    payment: {$sum: "$pricing.promotionFee"},
  }},
  {$lookup: {
    from: "users",
    localField: "_id",
    foreignField: "id",
    as: "user"
  }},
  {$unwind: "$user"},
  {$match: {"user.curation": {$exists: false}}},
  {$project: {
    cards: 1,
    payment: 1,
    handle: "$user.identity.handle",
    balance: "$user.balance",
    city: "$user.city",
    country: "$user.country",
    curation: "$user.curation",
  }},
  {$sort: {
    payment: -1
  }},
  {$group: {
    _id: "all",
    count: {$sum: 1},
    cards: {$sum: "$cards"},
    total: {$sum: "$payment"}
  }}
]).pretty()


// Payment percentage for cards based on price level

db.cards.aggregate([
  {$match: {
    postedAt: {$gt: 1521788400000},
    "pricing.openFeeUnits": {$gt: 0},
    "curation.block": false
  }},
  {$lookup: {
    from: "userCardInfo",
    localField: "id",
    foreignField: "cardId",
    as: "userCardInfo"
  }},
  {$unwind: "$userCardInfo"},
  {$match: {
    "userCardInfo.lastImpression": {$gt: 0}
  }},
  {$project: {
    cardId: "$id",
    level: "$pricing.openFeeUnits",
    opened: { $cond: { if: {$gt: ["$userCardInfo.lastOpened", 0]} , then: 1, else: 0 }},
    bought: { $cond: { if: {$gt: ["$userCardInfo.paidToAuthor", 0]} , then: 1, else: 0 }},
    refunded: { $cond: { if: "$userCardInfo.openFeeRefunded" , then: 1, else: 0 }},
  }},
  {$group: {
    _id: "$level",
    cards: {$addToSet: "$cardId"},
    impressions: {$sum: 1},
    opened: {$sum: "$opened"},
    bought: {$sum: "$bought"},
    refunded: {$sum: "$refunded"}
  }},
  {$project: {
    cards: {$size: "$cards"},
    impressions: 1,
    opened: 1,
    bought: 1,
    refunded: 1,
    openPerImpression: {$divide: ["$opened", "$impressions"]},
    buyPerOpen: {$divide: ["$bought", "$opened"]},
    buyPerImpression: {$divide: ["$bought", "$impressions"]},
  }},
  {$sort: {"_id": 1}}
])

privateCampaigns = db.cardCampaigns.aggregate([
  {$match: {
    status: "active"
  }},
  {$unwind: "$cardIds"},
  {$lookup: {
    from: "cards",
    localField: "cardIds",
    foreignField: "id",
    as: "card"
  }},
  {$match: {
    "card.private": true
  }},
  {$project: {
    campaignId: "$id",    
    cardId: "$card.id",
    handle: "$card.by.handle"
  }}
])

privateCampaigns.forEach( function(x) {
  db.cardCampaigns.update({id: x.campaignId}, {$set: {ends: 1522704169000}})
})