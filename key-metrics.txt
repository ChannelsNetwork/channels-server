Publishers by week

db.cards.aggregate([
  {$match: {state: "active"}},
  {$lookup: {from: "users", localField: "createdById", foreignField: "id", as: "publisher"}},
  {$unwind: "$publisher"},
  {$project: {  
    postedAt: "$postedAt",  
    revenue: "$stats.revenue.value",
    publisherId: "$publisher.id",
    publisherHandle: "$publisher.identity.handle",
    country: "$publisher.country"
  }},
  {$bucket: {
      groupBy: "$postedAt",
      boundaries: [1513238400000, 1513843200000, 1514448000000, 1515052800000, 1515657600000, 1516262400000, 1516867200000, 1517472000000, 1518076800000, 1518681600000,1519286400000, 1519891200000, 1520496000000, 1521097200000, 1521702000000, 1522306800000],
      default: -1,
      output: {
        cards: {$sum: 1},
        publishers: { $addToSet: "$publisherId" },
        countries: {$addToSet: "$country"},
        revenue: {$sum: "$revenue"}
      }
  }},
  {$project: {
    cards: 1, 
    publishers: {$size: "$publishers"}, 
    revenue: "$revenue", 
    countries: {$size: "$countries"},
    cardsPerPublisher: {$divide: ["$cards", {$size: "$publishers"}]}
  }}
])

By week, content consumers

db.userCardActions.aggregate([
  {$match: {action: "pay", fraudReason: {$exists: false}}},
  {$lookup: {from: "users", localField: "userId", foreignField: "id", as: "consumer"}},
  {$unwind: "$consumer"},
  {$project: {  
    postedAt: "$at",  
    cardId: "$cardId",
    expenses: "$payment.amount",
    consumerId: "$consumer.id",
    country: "$consumer.country"
  }},
  {$bucket: {
      groupBy: "$postedAt",
      boundaries: [1513238400000, 1513843200000, 1514448000000, 1515052800000, 1515657600000, 1516262400000, 1516867200000, 1517472000000, 1518076800000, 1518681600000,1519286400000, 1519891200000, 1520496000000, 1521097200000, 1521702000000, 1522306800000],
      default: -1,
      output: {
        purchases: {$sum: 1},
        cards: {$addToSet: "$cardId"},
        consumers: { $addToSet: "$consumerId" },
        countries: {$addToSet: "$country"},
        expenses: {$sum: "$expenses"},
      }
  }},
  {$project: {
    purchases: 1, cards: {$size: "$cards"}, consumers: {$size: "$consumers"}, expenses: "$expenses", countries: {$size: "$countries"}
  }}
])

By week, pure advertisers

db.adSlots.aggregate([
  {$match: {status: {$ne: "pending"}, type: {$in: ["impression-ad", "open-payment"]}}},
  {$lookup: {from: "users", localField: "authorId", foreignField: "id", as: "advertiser"}},
  {$unwind: "$advertiser"},
  {$project: {  
    created: "$created",  
    cardId: "$cardId",  
    type: "$type",  
    advertiserId: "$advertiser.id",
    country: "$advertiser.country",
    redeemed: "$redeemed",
    expense: { $cond: { if: "$redeemed", then: "$amount", else: 0 } },
  }},
  {$bucket: {
      groupBy: "$created",
      boundaries: [1513238400000, 1513843200000, 1514448000000, 1515052800000, 1515657600000, 1516262400000, 1516867200000, 1517472000000, 1518076800000, 1518681600000,1519286400000, 1519891200000, 1520496000000, 1521097200000, 1521702000000, 1522306800000],
      default: -1,
      output: {
        adslots: {$sum: 1},
        payImpressions: {$sum: { $cond: { if: {$eq: ["$type", "impression-ad"]} , then: 1, else: 0 } }},
        payToOpens: {$sum: { $cond: { if: {$eq: ["$type", "open-payment"]} , then: 1, else: 0 } }},
        openRedemptions: {$sum: { $cond: { if: {$and: ["$redeemed", {$eq: ["$type", "open-payment"]}]} , then: 1, else: 0 } }},
        advertisers: { $addToSet: "$advertiserId" },
        cards: {$addToSet: "$cardId"},
        countries: {$addToSet: "$country"},
        expenses: {$sum: "$expense"},
      }
  }},
  {$project: {
    adslots: 1, payImpressions: 1, payToOpens: 1, openRedemptions: 1, advertisers: {$size: "$advertisers"}, cards: {$size: "$cards"}, expenses: 1, countries: {$size: "$countries"}
  }}  
])

By week, advertising consumers

db.adSlots.aggregate([
  {$match: {status: {$ne: "pending"}}},
  {$lookup: {from: "users", localField: "userId", foreignField: "id", as: "consumer"}},
  {$unwind: "$consumer"},
  {$project: {  
    created: "$created",  
    cardId: "$cardId",    
    consumerId: "$consumer.id",
    country: "$consumer.country",
    redeemed: "$redeemed",
    revenue: { $cond: { if: "$redeemed", then: "$amount", else: 0 } },
  }},
  {$bucket: {
      groupBy: "$created",
      boundaries: [1513238400000, 1513843200000, 1514448000000, 1515052800000, 1515657600000, 1516262400000, 1516867200000, 1517472000000, 1518076800000, 1518681600000,1519286400000, 1519891200000, 1520496000000, 1521097200000, 1521702000000, 1522306800000],
      default: -1,
      output: {
        adslots: {$sum: 1},
        redemptions: {$sum: { $cond: { if: "$redeemed" , then: 1, else: 0 } }},
        consumers: { $addToSet: "$consumerId" },
        cards: {$addToSet: "$cardId"},
        countries: {$addToSet: "$country"},
        revenue: {$sum: "$revenue"},
      }
  }},
  {$project: {
    adslots: 1, redemptions: 1, consumers: {$size: "$consumers"}, cards: {$size: "$cards"}, revenue: 1, countries: {$size: "$countries"}
  }}  
])


In total, who are our most successful publishers?

db.users.aggregate([
  {$match: {lastPosted: {$gt: 0}, "curation": {$exists: false}}},
  {$project: {
    _id: 0,
    id: 1,
    handle: "$identity.handle",
    country: "$country",
    added: "$added"
  }},
  {$lookup: {from: "userCardActions", localField: "id", foreignField: "authorId", as: "action"}},
  {$unwind: "$action"},
  {$match: {"action.action": "pay", "action.at": {$gt: 1518681600000}, "action.fraudReason": {$exists: false}}},
  {$project: {
    id: 1,
    handle: 1,
    country: 1,
    added: 1,
    buyer: "$action.userId",
    amount: "$action.payment.amount",
    category: "$action.payment.category"
  }},
  {$group: {
    _id: {id: "$id", handle: "$handle", country: "$country", buyer: "$buyer", added: "$added"},
    revenueFromBuyer: {$sum: "$amount"},
    categories: {$addToSet: "$category"}
  }},
  {$project: {
    revenueFromBuyer: 1,
    category: {$cond: {
      if: {$in: ["fan", "$categories"]}, 
      then: "fan", 
      else: {
        $cond: {
          if: {$in: ["normal", "$categories"]},
          then: "normal",
          else: "firstTime"
        }
      }
    }}
  }},
  {$group: {
    _id: {id: "$_id.id", handle: "$_id.handle", country: "$_id.country", added: "$added"},
    revenue: {$sum: "$revenueFromBuyer"},
    buyers: {$sum: 1},
    fans: {$sum: {$cond: {if: {$eq: ["$category", "fan"]}, then: 1, else: 0}}},
    normals: {$sum: {$cond: {if: {$eq: ["$category", "normal"]}, then: 1, else: 0}}},
    firstTimes: {$sum: {$cond: {if: {$eq: ["$category", "firstTime"]}, then: 1, else: 0}}},
  }},
  {$match: {fans: {$gt: 3}, revenue: {$gt: 5}}},
  {$sort: {revenue: -1}},
])

  {$group: {
    _id: "all",
    publishers: {$sum: 1},
    revenue: {$sum: "$revenue"}
  }},
])

